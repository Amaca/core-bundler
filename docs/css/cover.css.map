{"version":3,"sources":["webpack://core-bundler/./src/app/modules/cover/cover.scss","webpack://core-bundler/./src/scss/grid/_breakpoints.scss"],"names":[],"mappings":"AAIA,OACI,kBCgEF,6BDjEF,OAIQ,aACA,uBAGJ,YACI,kBACA,UACA,QACA,WACA,WACA,2BCmDN,8BDzDE,YASQ,UACA,YC+CV,6BDzDE,YAcQ,kBACA,QAvBZ,aA0BY,WACA,eACA,OACA,OAIR,kBACI,mBAEA,4CAEI,0BACA,gBACA,gBCyBV,8BD7BM,4CAOQ,gBCsBd,8BD7BM,4CAWQ,2BAKZ,iBACI,eACA,gBACA,mBAEA,qBACI,eACA,gBCMV,6BDDM,iCAhER,eAmEgB,eAGJ,uCACI,WAKZ,0BACI,gBCZN,8BDWE,0BAIQ,iBCfV,6BDmBE,YAEQ,SAKA,0BACI,mBACA,iBC5Bd,6BD0BU,0BAKQ,kBAIR,sBACI,oBAMhB,cACI,kBAEA,oBACI,WACA,WACA,YACA,kBACA,8DACA,MACA,OACA,UACA,oBACA,WAGJ,mBACI,UACA,iBAEA,8CAEI","file":"../css/cover.css","sourcesContent":["@import \"../../../scss/core/mixins\";\r\n@import \"../../../scss/core/variables\";\r\n@import '../../../scss/grid/breakpoints';\r\n\r\n.cover {\r\n    position: relative;\r\n    \r\n    @include media-down(xs) {\r\n        display: flex;\r\n        flex-direction: column;\r\n    }\r\n\r\n    .box {\r\n        position: absolute;\r\n        z-index: 1;\r\n        top: 50%;\r\n        left: 100px;\r\n        color: $white;\r\n        transform: translateY(-50%);\r\n\r\n        @include media-down(sm) {\r\n            left: 30px;\r\n            color: $black;\r\n        }\r\n\r\n        @include media-down(xs) {\r\n            position: relative;\r\n            order: 2;\r\n            // background: #013c82;\r\n            padding: $spacing-s;\r\n            width: 100%;\r\n            transform: none;\r\n            left: 0;\r\n            top: 0;\r\n        }\r\n    }\r\n\r\n    .box-title {\r\n        margin-bottom: $spacing-s;\r\n\r\n        .h1,\r\n        .h2 {\r\n            font-size: pxrem(47);\r\n            line-height: 1.2;\r\n            font-weight: 600;\r\n\r\n            @include media-down(md) {\r\n                font-size: pxrem(36);\r\n            }\r\n\r\n            @include media-down(sm) {\r\n                font-size: pxrem(30);\r\n            }\r\n        }\r\n    }\r\n\r\n    .box-text {\r\n        font-size: pxrem(18);\r\n        font-weight: 500;\r\n        margin-bottom: $spacing-s;\r\n\r\n        .h2 {\r\n            font-size: pxrem(18);\r\n            line-height: 1.5;\r\n        }\r\n    }\r\n\r\n    .box-cta {\r\n        .btn._inline-alt {\r\n            @include media-down(xs) {\r\n                padding: 20px 0;\r\n                display: block;\r\n            }\r\n\r\n            &:hover {\r\n                color: $black;\r\n            }\r\n        }\r\n    }\r\n\r\n    .box-text + .box-cta {\r\n        margin-top: $spacing-m;\r\n\r\n        @include media-down(md) {\r\n            margin-top: $spacing-s;\r\n        }\r\n    }\r\n\r\n    .img {\r\n        @include media-down(xs) {\r\n            order: 1;\r\n        }\r\n\r\n        &._wide {\r\n        \r\n            picture {\r\n                padding-bottom: 25%;\r\n                min-height: 340px;\r\n\r\n                @include media-down(xs) {\r\n                    min-height: 150px;\r\n                }\r\n            }\r\n           \r\n            img {\r\n                object-position: top;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n.cover._title {\r\n    position: relative;\r\n\r\n    &:after {\r\n        content: '';\r\n        width: 100%;\r\n        height: 100%;\r\n        position: absolute;\r\n        background-image: linear-gradient(43deg, black, #192730, #450047);\r\n        top: 0;\r\n        left: 0;\r\n        z-index: 2;\r\n        pointer-events: none;\r\n        opacity: 0.3;\r\n    }\r\n\r\n    .box {\r\n        z-index: 3;\r\n        max-width: 1024px;\r\n\r\n        .h1,\r\n        .h2 {\r\n            font-weight: 700;\r\n        }\r\n    }\r\n}","// Name of the next breakpoint, or null for the last breakpoint.\r\n//\r\n//    >> breakpoint-next(sm)\r\n//    md\r\n//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\r\n//    md\r\n//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))\r\n//    md\r\n@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\r\n\t$n: index($breakpoint-names, $name);\r\n\t@return if($n !=null and $n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\r\n}\r\n\r\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\r\n//\r\n//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\r\n//    576px\r\n@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {\r\n\t$min: map-get($breakpoints, $name);\r\n\t@return if($min !=0, $min, null);\r\n}\r\n\r\n// Maximum breakpoint width. Null for the largest (last) breakpoint.\r\n// The maximum value is calculated as the minimum of the next one less 0.02px\r\n// to work around the limitations of `min-` and `max-` prefixes and viewports with fractional widths.\r\n// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\r\n// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\r\n// See https://bugs.webkit.org/show_bug.cgi?id=178261\r\n//\r\n//    >> breakpoint-max(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\r\n//    767.98px\r\n@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {\r\n\t$next: breakpoint-next($name, $breakpoints);\r\n\t@return if($next, breakpoint-min($next, $breakpoints) - .02, null);\r\n}\r\n\r\n// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front.\r\n// Useful for making responsive utilities.\r\n//\r\n//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\r\n//    \"\"  (Returns a blank string)\r\n//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\r\n//    \"-sm\"\r\n@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {\r\n\t@return if(breakpoint-min($name, $breakpoints)==null, \"\", \"-#{$name}\");\r\n}\r\n\r\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\r\n// Makes the @content apply to the given breakpoint and wider.\r\n@mixin media-up($name, $breakpoints: $grid-breakpoints) {\r\n\t$min: breakpoint-min($name, $breakpoints);\r\n\r\n\t@if $min {\r\n\t\t@media (min-width: $min) {\r\n\t\t\t@content;\r\n\t\t}\r\n\t}\r\n\r\n\t@else {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\r\n// Makes the @content apply to the given breakpoint and narrower.\r\n@mixin media-down($name, $breakpoints: $grid-breakpoints) {\r\n\t$max: breakpoint-max($name, $breakpoints);\r\n\r\n\t@if $max {\r\n\t\t@media (max-width: $max) {\r\n\t\t\t@content;\r\n\t\t}\r\n\t}\r\n\r\n\t@else {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n// Media that spans multiple breakpoint widths.\r\n// Makes the @content apply between the min and max breakpoints\r\n@mixin media-between($lower, $upper, $breakpoints: $grid-breakpoints) {\r\n\t$min: breakpoint-min($lower, $breakpoints);\r\n\t$max: breakpoint-max($upper, $breakpoints);\r\n\r\n\t@if $min !=null and $max !=null {\r\n\t\t@media (min-width: $min) and (max-width: $max) {\r\n\t\t\t@content;\r\n\t\t}\r\n\t}\r\n\r\n\t@else if $max==null {\r\n\t\t@include media-up($lower, $breakpoints) {\r\n\t\t\t@content;\r\n\t\t}\r\n\t}\r\n\r\n\t@else if $min==null {\r\n\t\t@include media-down($upper, $breakpoints) {\r\n\t\t\t@content;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// Media between the breakpoint's minimum and maximum widths.\r\n// No minimum for the smallest breakpoint, and no maximum for the largest one.\r\n// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\r\n@mixin media-only($name, $breakpoints: $grid-breakpoints) {\r\n\t$min: breakpoint-min($name, $breakpoints);\r\n\t$max: breakpoint-max($name, $breakpoints);\r\n\r\n\t@if $min !=null and $max !=null {\r\n\t\t@media (min-width: $min) and (max-width: $max) {\r\n\t\t\t@content;\r\n\t\t}\r\n\t}\r\n\r\n\t@else if $max==null {\r\n\t\t@include media-up($name, $breakpoints) {\r\n\t\t\t@content;\r\n\t\t}\r\n\t}\r\n\r\n\t@else if $min==null {\r\n\t\t@include media-down($name, $breakpoints) {\r\n\t\t\t@content;\r\n\t\t}\r\n\t}\r\n}\r\n"],"sourceRoot":""}