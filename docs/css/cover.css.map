{"version":3,"file":"../css/cover.css","mappings":"AAIA,OACI,kBCgEF,4BDjEF,OAIQ,aACA,uBAGJ,YACI,kBACA,UACA,QACA,WACA,UEKK,CFJL,2BCmDN,6BDzDE,YASQ,UACA,UESC,EDsCX,4BDzDE,YAcQ,kBACA,QAEA,YErBA,CFsBA,WACA,eACA,OACA,OAIR,kBACI,kBE9BI,CFgCJ,4CAEI,0BACA,gBACA,gBCyBV,6BD7BM,4CAOQ,gBCsBd,6BD7BM,4CAWQ,2BAKZ,iBACI,eACA,gBACA,kBEnDI,CFqDJ,qBACI,eACA,gBCMV,4BDDM,iCAEQ,eACA,eAGJ,uCACI,UE5CH,CFiDT,0BACI,eE1EI,CD8DV,6BDWE,0BAIQ,eE5EA,ED6DV,4BDmBE,YAEQ,SAKA,0BACI,mBACA,iBC5Bd,4BD0BU,0BAKQ,kBAIR,sBACI,oBAMhB,cACI,kBAEA,oBACI,WACA,WACA,YACA,kBACA,iEACA,MACA,OACA,UACA,oBACA,WAGJ,mBACI,UACA,iBAEA,8CAEI,gB","sources":["webpack://core-bundler/./src/app/modules/cover/cover.scss","webpack://core-bundler/./src/scss/grid/_breakpoints.scss","webpack://core-bundler/./src/scss/core/_variables.scss"],"sourcesContent":["@import \"../../../scss/core/mixins\";\r\n@import \"../../../scss/core/variables\";\r\n@import '../../../scss/grid/breakpoints';\r\n\r\n.cover {\r\n    position: relative;\r\n    \r\n    @include media-down(xs) {\r\n        display: flex;\r\n        flex-direction: column;\r\n    }\r\n\r\n    .box {\r\n        position: absolute;\r\n        z-index: 1;\r\n        top: 50%;\r\n        left: 100px;\r\n        color: $white;\r\n        transform: translateY(-50%);\r\n\r\n        @include media-down(sm) {\r\n            left: 30px;\r\n            color: $black;\r\n        }\r\n\r\n        @include media-down(xs) {\r\n            position: relative;\r\n            order: 2;\r\n            // background: #013c82;\r\n            padding: $spacing-s;\r\n            width: 100%;\r\n            transform: none;\r\n            left: 0;\r\n            top: 0;\r\n        }\r\n    }\r\n\r\n    .box-title {\r\n        margin-bottom: $spacing-s;\r\n\r\n        .h1,\r\n        .h2 {\r\n            font-size: pxrem(47);\r\n            line-height: 1.2;\r\n            font-weight: 600;\r\n\r\n            @include media-down(md) {\r\n                font-size: pxrem(36);\r\n            }\r\n\r\n            @include media-down(sm) {\r\n                font-size: pxrem(30);\r\n            }\r\n        }\r\n    }\r\n\r\n    .box-text {\r\n        font-size: pxrem(18);\r\n        font-weight: 500;\r\n        margin-bottom: $spacing-s;\r\n\r\n        .h2 {\r\n            font-size: pxrem(18);\r\n            line-height: 1.5;\r\n        }\r\n    }\r\n\r\n    .box-cta {\r\n        .btn._inline-alt {\r\n            @include media-down(xs) {\r\n                padding: 20px 0;\r\n                display: block;\r\n            }\r\n\r\n            &:hover {\r\n                color: $black;\r\n            }\r\n        }\r\n    }\r\n\r\n    .box-text + .box-cta {\r\n        margin-top: $spacing-m;\r\n\r\n        @include media-down(md) {\r\n            margin-top: $spacing-s;\r\n        }\r\n    }\r\n\r\n    .img {\r\n        @include media-down(xs) {\r\n            order: 1;\r\n        }\r\n\r\n        &._wide {\r\n        \r\n            picture {\r\n                padding-bottom: 25%;\r\n                min-height: 340px;\r\n\r\n                @include media-down(xs) {\r\n                    min-height: 150px;\r\n                }\r\n            }\r\n           \r\n            img {\r\n                object-position: top;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n.cover._title {\r\n    position: relative;\r\n\r\n    &:after {\r\n        content: '';\r\n        width: 100%;\r\n        height: 100%;\r\n        position: absolute;\r\n        background-image: linear-gradient(43deg, black, #192730, #450047);\r\n        top: 0;\r\n        left: 0;\r\n        z-index: 2;\r\n        pointer-events: none;\r\n        opacity: 0.3;\r\n    }\r\n\r\n    .box {\r\n        z-index: 3;\r\n        max-width: 1024px;\r\n\r\n        .h1,\r\n        .h2 {\r\n            font-weight: 700;\r\n        }\r\n    }\r\n}","// Name of the next breakpoint, or null for the last breakpoint.\n//\n//    >> breakpoint-next(sm)\n//    md\n//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    md\n//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))\n//    md\n@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\n\t$n: index($breakpoint-names, $name);\n\t@return if($n !=null and $n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\n}\n\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\n//\n//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    576px\n@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {\n\t$min: map-get($breakpoints, $name);\n\t@return if($min !=0, $min, null);\n}\n\n// Maximum breakpoint width. Null for the largest (last) breakpoint.\n// The maximum value is calculated as the minimum of the next one less 0.02px\n// to work around the limitations of `min-` and `max-` prefixes and viewports with fractional widths.\n// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\n// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\n// See https://bugs.webkit.org/show_bug.cgi?id=178261\n//\n//    >> breakpoint-max(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    767.98px\n@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {\n\t$next: breakpoint-next($name, $breakpoints);\n\t@return if($next, breakpoint-min($next, $breakpoints) - .02, null);\n}\n\n// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front.\n// Useful for making responsive utilities.\n//\n//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"\"  (Returns a blank string)\n//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"-sm\"\n@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {\n\t@return if(breakpoint-min($name, $breakpoints)==null, \"\", \"-#{$name}\");\n}\n\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n// Makes the @content apply to the given breakpoint and wider.\n@mixin media-up($name, $breakpoints: $grid-breakpoints) {\n\t$min: breakpoint-min($name, $breakpoints);\n\n\t@if $min {\n\t\t@media (min-width: $min) {\n\t\t\t@content;\n\t\t}\n\t}\n\n\t@else {\n\t\t@content;\n\t}\n}\n\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n// Makes the @content apply to the given breakpoint and narrower.\n@mixin media-down($name, $breakpoints: $grid-breakpoints) {\n\t$max: breakpoint-max($name, $breakpoints);\n\n\t@if $max {\n\t\t@media (max-width: $max) {\n\t\t\t@content;\n\t\t}\n\t}\n\n\t@else {\n\t\t@content;\n\t}\n}\n\n// Media that spans multiple breakpoint widths.\n// Makes the @content apply between the min and max breakpoints\n@mixin media-between($lower, $upper, $breakpoints: $grid-breakpoints) {\n\t$min: breakpoint-min($lower, $breakpoints);\n\t$max: breakpoint-max($upper, $breakpoints);\n\n\t@if $min !=null and $max !=null {\n\t\t@media (min-width: $min) and (max-width: $max) {\n\t\t\t@content;\n\t\t}\n\t}\n\n\t@else if $max==null {\n\t\t@include media-up($lower, $breakpoints) {\n\t\t\t@content;\n\t\t}\n\t}\n\n\t@else if $min==null {\n\t\t@include media-down($upper, $breakpoints) {\n\t\t\t@content;\n\t\t}\n\t}\n}\n\n// Media between the breakpoint's minimum and maximum widths.\n// No minimum for the smallest breakpoint, and no maximum for the largest one.\n// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\n@mixin media-only($name, $breakpoints: $grid-breakpoints) {\n\t$min: breakpoint-min($name, $breakpoints);\n\t$max: breakpoint-max($name, $breakpoints);\n\n\t@if $min !=null and $max !=null {\n\t\t@media (min-width: $min) and (max-width: $max) {\n\t\t\t@content;\n\t\t}\n\t}\n\n\t@else if $max==null {\n\t\t@include media-up($name, $breakpoints) {\n\t\t\t@content;\n\t\t}\n\t}\n\n\t@else if $min==null {\n\t\t@include media-down($name, $breakpoints) {\n\t\t\t@content;\n\t\t}\n\t}\n}\n","//css vars\r\n:root {\r\n}\r\n\r\n//gutter\r\n$spacing-xl: 80px;\r\n$spacing-l: 60px;\r\n$spacing-m: 40px;\r\n$spacing-s: 20px;\r\n$spacing-xs: 10px;\r\n$spacing-xxs: 5px;\r\n\r\n//font size\r\n$font-main: 18px;\r\n$font-rem: 18;\r\n\r\n$font-18: 1rem;\r\n$font-16: pxrem(16);\r\n$font-14: pxrem(14);\r\n$font-12: pxrem(12);\r\n\r\n//colors\r\n$white:      #ffffff;\r\n$orange:     #751904;\r\n$blue:       #00294d;\r\n$dark-blue:  #071218;\r\n$deep-blue:  #171c22;\r\n$grey:       #b9b9b9;\r\n$light-grey: #ebebeb;\r\n$dark-grey:  #37383a;\r\n$dark:       #2a2b2e;\r\n$black:      #000000;\r\n\r\n//elements\r\n$header-height: 130px;\r\n$header-height-m: 94px;\r\n\r\n//animations\r\n$expo: cubic-bezier(1.000, 0.000, 0.000, 1.000);\r\n$smooth: cubic-bezier(0, 0.97, 0.43, 1);\r\n\r\n//grid\r\n$grid-columns: 12 !default;\r\n$grid-gutter-widths: (\r\n\txs: 30px,\r\n\tsm: 30px,\r\n\tmd: 30px,\r\n\tlg: 30px,\r\n\txl: 30px) !default;\r\n$grid-breakpoints: (\r\n\txs: 0,\r\n\tsm: 768px,\r\n\tmd: 1024px,\r\n\tlg: 1240px,\r\n\txl: 1470px) !default;\r\n$container-max-widths: (\r\n\tsm: calc(100% - 30px),\r\n\tmd: calc(100% - 30px),\r\n\tlg: 1240px,\r\n\txl: 1470px) !default; \r\n$container-fluid-max-widths: (\r\n\tsm: calc(100% - 60px),\r\n\tmd: calc(100% - 60px),\r\n\tlg: calc(100% - 60px),\r\n\txl: 1800px) !default; "],"names":[],"sourceRoot":""}