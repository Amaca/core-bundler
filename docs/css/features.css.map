{"version":3,"sources":["webpack://core-bundler/./src/app/modules/features/features.scss","webpack://core-bundler/./src/scss/grid/_breakpoints.scss"],"names":[],"mappings":"AAMI,+BACI,mBC8DN,8BD/DE,+BAIQ,oBC2DV,8BDrDU,yBACI,oBAMhB,gCAEI,kBACA,YACA,oBC0CF,8BD9CF,gCAOQ,mBACA,qBAGJ,gFAEI,cACA,0BACA,gBACA,gBC8BN,8BDnCE,gFAQQ,2BAIR,oCACI,gBACA,yBAGJ,sDACI,mBAGJ,oDACI,mBAGJ,kDACI,mBAGJ,oDACI,kBACA,UACA,UACA,cCEN,8BDNE,oDAOQ,SAEA,4DACI,YAKZ,0EACI,gBCVN,8BDSE,0EAIQ,iBAKR,4CACI,WACA,kBACA,OACA,SACA,WACA,WACA,yBACA,2BC1BN,8BDkBE,4CAWQ,aAIR,4DACI,mBAjGJ,kBAmGI,gBAEA,wEACI,SAGJ,oKAEI,gBACA","file":"../css/features.css","sourcesContent":["@import \"../../../scss/core/mixins\";\r\n@import \"../../../scss/core/variables\";\r\n@import '../../../scss/grid/breakpoints';\r\n\r\n.features {\r\n\r\n    .box._heading-center {\r\n        margin-bottom: $spacing-l;\r\n\r\n        @include media-down(md) {\r\n            margin-bottom: $spacing-m;\r\n        }\r\n    }\r\n\r\n    &._alt {\r\n        @include media-down(sm) {\r\n            .col-md-6 {\r\n                margin-bottom: $spacing-s;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n.card._features,\r\n.card--features {\r\n    position: relative;\r\n    height: 100%;\r\n    padding-bottom: $spacing-m;\r\n\r\n    @include media-down(md) {\r\n        margin-bottom: $spacing-m;\r\n        padding-bottom: $spacing-s;\r\n    }\r\n\r\n    .h2,\r\n    .h3 {\r\n        color: $dark-blue;\r\n        font-size: pxrem(34);\r\n        line-height: 1.2;\r\n        font-weight: 300;\r\n\r\n        @include media-down(sm) {\r\n            font-size: pxrem(22);\r\n        }\r\n    }\r\n    \r\n    p {\r\n        font-weight: 300;\r\n        font-size: pxrem(16);\r\n    }\r\n\r\n    .box-title {\r\n        margin-bottom: $spacing-xs;\r\n    }\r\n\r\n    .box-text {\r\n        padding-bottom: $spacing-xxs;\r\n    }\r\n\r\n    .box-img {\r\n        margin-bottom: $spacing-s;\r\n    }\r\n\r\n    .box-icon {\r\n        position: absolute;\r\n        top: -#{$spacing-s};\r\n        left: $spacing-s;\r\n        line-height: 0;\r\n\r\n        @include media-down(sm) {\r\n            top: 12px;\r\n\r\n            img {\r\n                width: 40px;\r\n            }\r\n        }\r\n    }\r\n\r\n    .box-icon + .box-title {\r\n        margin-top: $spacing-m;\r\n\r\n        @include media-down(md) {\r\n            margin-top: $spacing-s;\r\n\r\n        }\r\n    }\r\n\r\n    &:after {\r\n        content: '';\r\n        position: absolute;\r\n        left: 0;\r\n        bottom: 0;\r\n        height: 4px;\r\n        width: 100%;\r\n        background-size: 100% 4px;\r\n        background-repeat: repeat-x;\r\n\r\n        @include media-down(md) {\r\n            bottom: $spacing-m;\r\n        }\r\n    }\r\n\r\n    &._features-alt {\r\n        background: #F6F6F6;\r\n        padding: $spacing-m $spacing-s $spacing-m $spacing-s;\r\n        margin-bottom: 0;\r\n\r\n        &:after {\r\n            bottom: 0;\r\n        }\r\n\r\n        .box-text,\r\n        .box-text p {\r\n            font-weight: 400;\r\n            font-size: pxrem(18);\r\n        }\r\n    }\r\n}\r\n","// Name of the next breakpoint, or null for the last breakpoint.\r\n//\r\n//    >> breakpoint-next(sm)\r\n//    md\r\n//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\r\n//    md\r\n//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))\r\n//    md\r\n@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\r\n\t$n: index($breakpoint-names, $name);\r\n\t@return if($n !=null and $n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\r\n}\r\n\r\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\r\n//\r\n//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\r\n//    576px\r\n@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {\r\n\t$min: map-get($breakpoints, $name);\r\n\t@return if($min !=0, $min, null);\r\n}\r\n\r\n// Maximum breakpoint width. Null for the largest (last) breakpoint.\r\n// The maximum value is calculated as the minimum of the next one less 0.02px\r\n// to work around the limitations of `min-` and `max-` prefixes and viewports with fractional widths.\r\n// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\r\n// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\r\n// See https://bugs.webkit.org/show_bug.cgi?id=178261\r\n//\r\n//    >> breakpoint-max(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\r\n//    767.98px\r\n@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {\r\n\t$next: breakpoint-next($name, $breakpoints);\r\n\t@return if($next, breakpoint-min($next, $breakpoints) - .02, null);\r\n}\r\n\r\n// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front.\r\n// Useful for making responsive utilities.\r\n//\r\n//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\r\n//    \"\"  (Returns a blank string)\r\n//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\r\n//    \"-sm\"\r\n@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {\r\n\t@return if(breakpoint-min($name, $breakpoints)==null, \"\", \"-#{$name}\");\r\n}\r\n\r\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\r\n// Makes the @content apply to the given breakpoint and wider.\r\n@mixin media-up($name, $breakpoints: $grid-breakpoints) {\r\n\t$min: breakpoint-min($name, $breakpoints);\r\n\r\n\t@if $min {\r\n\t\t@media (min-width: $min) {\r\n\t\t\t@content;\r\n\t\t}\r\n\t}\r\n\r\n\t@else {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\r\n// Makes the @content apply to the given breakpoint and narrower.\r\n@mixin media-down($name, $breakpoints: $grid-breakpoints) {\r\n\t$max: breakpoint-max($name, $breakpoints);\r\n\r\n\t@if $max {\r\n\t\t@media (max-width: $max) {\r\n\t\t\t@content;\r\n\t\t}\r\n\t}\r\n\r\n\t@else {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n// Media that spans multiple breakpoint widths.\r\n// Makes the @content apply between the min and max breakpoints\r\n@mixin media-between($lower, $upper, $breakpoints: $grid-breakpoints) {\r\n\t$min: breakpoint-min($lower, $breakpoints);\r\n\t$max: breakpoint-max($upper, $breakpoints);\r\n\r\n\t@if $min !=null and $max !=null {\r\n\t\t@media (min-width: $min) and (max-width: $max) {\r\n\t\t\t@content;\r\n\t\t}\r\n\t}\r\n\r\n\t@else if $max==null {\r\n\t\t@include media-up($lower, $breakpoints) {\r\n\t\t\t@content;\r\n\t\t}\r\n\t}\r\n\r\n\t@else if $min==null {\r\n\t\t@include media-down($upper, $breakpoints) {\r\n\t\t\t@content;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// Media between the breakpoint's minimum and maximum widths.\r\n// No minimum for the smallest breakpoint, and no maximum for the largest one.\r\n// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\r\n@mixin media-only($name, $breakpoints: $grid-breakpoints) {\r\n\t$min: breakpoint-min($name, $breakpoints);\r\n\t$max: breakpoint-max($name, $breakpoints);\r\n\r\n\t@if $min !=null and $max !=null {\r\n\t\t@media (min-width: $min) and (max-width: $max) {\r\n\t\t\t@content;\r\n\t\t}\r\n\t}\r\n\r\n\t@else if $max==null {\r\n\t\t@include media-up($name, $breakpoints) {\r\n\t\t\t@content;\r\n\t\t}\r\n\t}\r\n\r\n\t@else if $min==null {\r\n\t\t@include media-down($name, $breakpoints) {\r\n\t\t\t@content;\r\n\t\t}\r\n\t}\r\n}\r\n"],"sourceRoot":""}