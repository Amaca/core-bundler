{"version":3,"sources":["webpack://core-bundler/./src/app/modules/accordion/accordion.scss","webpack://core-bundler/./src/scss/core/_variables.scss","webpack://core-bundler/./src/scss/grid/_breakpoints.scss"],"names":[],"mappings":"AAIA,oBACI,mBCEQ,2BDHZ,0BAKQ,gCALR,kBAOQ,aACA,kBACA,eEwDN,6BF9DE,2BASQ,cACA,YAKZ,iBACI,kBACA,UAEA,6BACA,gCAEA,yCACI,eACA,kBACA,UA5BR,kBA+BQ,iDACI,WACA,YACA,kBACA,UACA,QACA,qBACA,qCACA,+BACA,mBAxCZ,mBEiEE,8BFlCM,iDAaQ,WACA,YACA,sBAGJ,+GAEI,WACA,kBACA,WACA,WACA,QACA,SACA,+BACA,gBA1DhB,mBEiEE,8BFhBU,+GAaQ,WACA,YAIR,uDACI,yBACA,oBACA,sBELd,8BFEU,uDAOQ,oBACA,sBAOJ,8DACI,aAMhB,mCACI,0BACA,cACA,mBE3BN,8BFwBE,mCAMQ,2BAIR,0CACI,gBACA,aACA,mBErCN,8BFkCE,0CAMQ,iBAGJ,+CACI,gBACA,mBAEA,iDACI,WACA,SACA,yBACA,cAGJ,wDACI,gBAGJ,kDACI,gBA5HhB,UA+HgB,qDACI,4CAhIpB,aEiEE,8BF8Dc,qDA/HhB,cAuIoB,2DACI,yBAGJ,2DACI,aAQxB,kCACI","file":"../css/accordion.css","sourcesContent":["@import \"../../../scss/core/mixins\";\r\n@import \"../../../scss/core/variables\";\r\n@import '../../../scss/grid/breakpoints';\r\n\r\n.accordion__filters {\r\n    margin-bottom: $spacing-m;\r\n\r\n    select {\r\n        padding: 8px 50px 8px 20px;\r\n        border: 1px solid rgba(0, 0, 0, 0.3);\r\n        border-radius: 2px;\r\n        outline: none;\r\n        position: relative;\r\n        cursor: pointer;\r\n\r\n        @include media-down(xs) {\r\n            display: block;\r\n            width: 100%;\r\n        }\r\n    }\r\n}\r\n\r\n.accordion__item {\r\n    position: relative;\r\n    z-index: 1;\r\n    //transition: auto .6s $smooth;\r\n    border-top: 1px solid #707070;\r\n    border-bottom: 1px solid #707070;\r\n\r\n    .accordion__item-header {\r\n        cursor: pointer; \r\n        position: relative;\r\n        z-index: 1;\r\n        padding: $spacing-s $spacing-xs;\r\n        \r\n        .circle {\r\n            width: 44px;\r\n            height: 44px;\r\n            position: absolute;\r\n            z-index: 1;\r\n            right: 0;\r\n            top: calc(50% - 22px);\r\n            transition: transform .6s ease-in-out;\r\n            transform-origin: center center;\r\n            background: $dark-blue;\r\n            border-radius: 100%;\r\n\r\n            @include media-down(md) {\r\n                width: 30px;\r\n                height: 30px;\r\n                top: calc(50% - 15px);\r\n            }\r\n\r\n            &:after,\r\n            &:before {\r\n                content: '';\r\n                position: absolute;\r\n                width: 24px;\r\n                height: 4px;\r\n                top: 50%;\r\n                left: 50%;\r\n                transform: translate(-50%, -50%);\r\n                background: $white;\r\n                border-radius: 10px;\r\n\r\n                @include media-down(md) {\r\n                    width: 12px;\r\n                    height: 2px;\r\n                }\r\n            }\r\n\r\n            &:after {\r\n                transform: rotate(-90deg);\r\n                top: calc(50% - 2px);\r\n                left: calc(50% - 12px);\r\n\r\n                \r\n                @include media-down(md) {\r\n                    top: calc(50% - 1px);\r\n                    left: calc(50% - 6px);\r\n                }\r\n            }\r\n        }\r\n\r\n        &.active {\r\n            .circle {\r\n                &:after {\r\n                    display: none;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    .accordion__title {\r\n        font-size: pxrem(32);\r\n        color: $dark-blue;\r\n        padding-right: 60px;\r\n\r\n        @include media-down(md) {\r\n            font-size: pxrem(24);\r\n        }\r\n    }\r\n\r\n    .accordion__item-content {\r\n        overflow: hidden;\r\n        display: none;\r\n        padding-right: 60px;\r\n\r\n        @include media-down(sm) {\r\n            padding-right: 0;\r\n        }\r\n\r\n        .box {\r\n            margin-top: $spacing-s;\r\n            margin-bottom: $spacing-m;\r\n\r\n            a {\r\n                color: $black;\r\n                border: 0;\r\n                font-size: pxrem(16);\r\n                display: block;\r\n            }\r\n\r\n            strong + p {\r\n                margin-bottom: 0;\r\n            }\r\n\r\n            ul {\r\n                list-style: none;\r\n                padding: 0;\r\n\r\n                li {\r\n                    transition: background-color .3s ease-in-out;\r\n                    padding: $spacing-s;\r\n\r\n                    @include media-down(sm) {\r\n                        padding: $spacing-xs;\r\n                    }\r\n\r\n                    &:hover {\r\n                        background-color: #E7F5FB;\r\n                    }\r\n\r\n                    &:after {\r\n                        display: none;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n.accordion__item + .accordion__item {\r\n    border-top: 0;\r\n}\r\n","//css vars\r\n:root {\r\n}\r\n\r\n//gutter\r\n$spacing-xl: 80px;\r\n$spacing-l: 60px;\r\n$spacing-m: 40px;\r\n$spacing-s: 20px;\r\n$spacing-xs: 10px;\r\n$spacing-xxs: 5px;\r\n\r\n//font size\r\n$font-main: 18px;\r\n$font-rem: 18;\r\n\r\n$font-18: 1rem;\r\n$font-16: pxrem(16);\r\n$font-14: pxrem(14);\r\n$font-12: pxrem(12);\r\n\r\n//colors\r\n$white:      #ffffff;\r\n$orange:     #751904;\r\n$blue:       #00294d;\r\n$dark-blue:  #071218;\r\n$deep-blue:  #171c22;\r\n$grey:       #b9b9b9;\r\n$light-grey: #ebebeb;\r\n$dark-grey:  #37383a;\r\n$dark:       #2a2b2e;\r\n$black:      #000000;\r\n\r\n//elements\r\n$header-height: 130px;\r\n$header-height-m: 94px;\r\n\r\n\r\n//animations\r\n$expo: cubic-bezier(1.000, 0.000, 0.000, 1.000);\r\n$smooth: cubic-bezier(0, 0.97, 0.43, 1);\r\n\r\n//grid\r\n$grid-columns: 12 !default;\r\n$grid-gutter-widths: (\r\n\txs: 30px,\r\n\tsm: 30px,\r\n\tmd: 30px,\r\n\tlg: 30px,\r\n\txl: 30px) !default;\r\n$grid-breakpoints: (\r\n\txs: 0,\r\n\tsm: 768px,\r\n\tmd: 1024px,\r\n\tlg: 1240px,\r\n\txl: 1470px) !default;\r\n$container-max-widths: (\r\n\tsm: calc(100% - 30px),\r\n\tmd: calc(100% - 30px),\r\n\tlg: 1240px,\r\n\txl: 1470px) !default; \r\n$container-fluid-max-widths: (\r\n\tsm: calc(100% - 60px),\r\n\tmd: calc(100% - 60px),\r\n\tlg: calc(100% - 60px),\r\n\txl: 1800px) !default; ","// Name of the next breakpoint, or null for the last breakpoint.\r\n//\r\n//    >> breakpoint-next(sm)\r\n//    md\r\n//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\r\n//    md\r\n//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))\r\n//    md\r\n@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\r\n\t$n: index($breakpoint-names, $name);\r\n\t@return if($n !=null and $n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\r\n}\r\n\r\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\r\n//\r\n//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\r\n//    576px\r\n@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {\r\n\t$min: map-get($breakpoints, $name);\r\n\t@return if($min !=0, $min, null);\r\n}\r\n\r\n// Maximum breakpoint width. Null for the largest (last) breakpoint.\r\n// The maximum value is calculated as the minimum of the next one less 0.02px\r\n// to work around the limitations of `min-` and `max-` prefixes and viewports with fractional widths.\r\n// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\r\n// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\r\n// See https://bugs.webkit.org/show_bug.cgi?id=178261\r\n//\r\n//    >> breakpoint-max(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\r\n//    767.98px\r\n@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {\r\n\t$next: breakpoint-next($name, $breakpoints);\r\n\t@return if($next, breakpoint-min($next, $breakpoints) - .02, null);\r\n}\r\n\r\n// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front.\r\n// Useful for making responsive utilities.\r\n//\r\n//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\r\n//    \"\"  (Returns a blank string)\r\n//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\r\n//    \"-sm\"\r\n@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {\r\n\t@return if(breakpoint-min($name, $breakpoints)==null, \"\", \"-#{$name}\");\r\n}\r\n\r\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\r\n// Makes the @content apply to the given breakpoint and wider.\r\n@mixin media-up($name, $breakpoints: $grid-breakpoints) {\r\n\t$min: breakpoint-min($name, $breakpoints);\r\n\r\n\t@if $min {\r\n\t\t@media (min-width: $min) {\r\n\t\t\t@content;\r\n\t\t}\r\n\t}\r\n\r\n\t@else {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\r\n// Makes the @content apply to the given breakpoint and narrower.\r\n@mixin media-down($name, $breakpoints: $grid-breakpoints) {\r\n\t$max: breakpoint-max($name, $breakpoints);\r\n\r\n\t@if $max {\r\n\t\t@media (max-width: $max) {\r\n\t\t\t@content;\r\n\t\t}\r\n\t}\r\n\r\n\t@else {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n// Media that spans multiple breakpoint widths.\r\n// Makes the @content apply between the min and max breakpoints\r\n@mixin media-between($lower, $upper, $breakpoints: $grid-breakpoints) {\r\n\t$min: breakpoint-min($lower, $breakpoints);\r\n\t$max: breakpoint-max($upper, $breakpoints);\r\n\r\n\t@if $min !=null and $max !=null {\r\n\t\t@media (min-width: $min) and (max-width: $max) {\r\n\t\t\t@content;\r\n\t\t}\r\n\t}\r\n\r\n\t@else if $max==null {\r\n\t\t@include media-up($lower, $breakpoints) {\r\n\t\t\t@content;\r\n\t\t}\r\n\t}\r\n\r\n\t@else if $min==null {\r\n\t\t@include media-down($upper, $breakpoints) {\r\n\t\t\t@content;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// Media between the breakpoint's minimum and maximum widths.\r\n// No minimum for the smallest breakpoint, and no maximum for the largest one.\r\n// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\r\n@mixin media-only($name, $breakpoints: $grid-breakpoints) {\r\n\t$min: breakpoint-min($name, $breakpoints);\r\n\t$max: breakpoint-max($name, $breakpoints);\r\n\r\n\t@if $min !=null and $max !=null {\r\n\t\t@media (min-width: $min) and (max-width: $max) {\r\n\t\t\t@content;\r\n\t\t}\r\n\t}\r\n\r\n\t@else if $max==null {\r\n\t\t@include media-up($name, $breakpoints) {\r\n\t\t\t@content;\r\n\t\t}\r\n\t}\r\n\r\n\t@else if $min==null {\r\n\t\t@include media-down($name, $breakpoints) {\r\n\t\t\t@content;\r\n\t\t}\r\n\t}\r\n}\r\n"],"sourceRoot":""}