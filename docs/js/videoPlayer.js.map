{"version":3,"sources":["webpack://core-bundler/./src/app/modules/module.js","webpack://core-bundler/./src/app/shared/LazyEmbed.js","webpack://core-bundler/./src/app/modules/video-player/video-player.js","webpack://core-bundler/./src/app/shared/EventEmitter.js"],"names":["Module","el","node","name","options","time","endingTime","LazyEmbed","EventEmitter","selector","settings","src","callback","item","key","value","attr","VideoPlayerModule","createInstance","_names","_name","namespace","_args","finalResult","result","args","names","newName","parts"],"mappings":"uIACe,MAAMA,UAAe,GAAa,CAEhD,YAAYC,EAAI,CACf,MAAMA,CAAE,CACT,CAEA,KAAKC,EAAMC,EAAMC,EAASC,EAAM,CAC/B,KAAK,KAAOH,EACZ,KAAK,KAAOC,EACZ,KAAK,QAAUC,IAAY,KAAOA,EAAU,CAAC,UAAW,GAAI,SAAU,EAAE,EAExE,KAAK,WAAW,EAChB,KAAK,KAAK,CACX,CAEA,YAAa,CAAC,CAEd,MAAO,CAAC,CAER,OAAQ,CACP,MAAME,EAAa,KAAK,IAAI,EAC5B,WAAW,IAAM,KAAK,QAAQ,QAAS,CAACA,CAAU,CAAC,EAAG,IAAQ,CAC/D,CACD,C,4GCtBe,MAAMC,UAAkBC,EAAA,CAAa,CAEnD,YAAYN,EAAM,CACjB,MAAM,EACN,KAAK,KAAOA,EACZ,KAAK,KAAO,KAAK,MAAMA,EAAK,aAAa,YAAY,CAAC,EACtD,KAAK,OAAO,EACZ,KAAK,WAAW,CACjB,CAEA,YAAa,CACZ,OAAO,KAAK,KAAK,KAAM,CACtB,IAAK,OACJ,KAAK,UAAU,KAAK,KAAK,IAAK,KAAK,QAAQ,EAC5C,MACA,IAAK,QACJ,KAAK,UAAU,KAAK,KAAK,IAAK,KAAK,SAAS,EAC7C,KACD,CAED,CAEA,UAAW,CACV,MAAMO,EAAW,MAAQ,KAAK,KAAK,SAAS,SACtCC,EAAW,OAAO,OAAO,KAAK,KAAK,SAAU,CAClD,OAAU,IAAMD,CACjB,CAAC,EACD,KAAK,KAAK,aAAa,KAAMA,CAAQ,EACrC,OAAO,MAAM,MAAM,OAAOC,CAAQ,EAC9B,SAAS,kBAAkB,qBAAqB,EAAE,KACrD,SAAS,kBAAkB,qBAAqB,EAAE,GAAG,MAAQ,SAAS,SAAS,KAGjF,CAEA,WAAY,CAEZ,CAEA,UAAUC,EAAKC,EAAU,CACxB,MAAMC,EAAO,SAAS,cAAc,QAAQ,EAC5CA,EAAK,aAAc,UAAW,OAAQ,EACtCA,EAAK,aAAc,OAAQ,iBAAkB,EAC7CA,EAAK,aAAc,MAAOF,CAAI,EAC9BE,EAAK,OAASD,EAAS,KAAK,IAAI,EAChC,KAAK,KAAK,YAAYC,CAAI,CAC3B,CAEA,UAAUF,EAAKC,EAAU,CACxB,MAAMC,EAAO,SAAS,cAAc,QAAQ,EACzB,OAAO,KAAK,KAAK,KAAK,QAAQ,EAAE,IAAKC,GAAQ,CAC/D,IAAIC,EAAQ,KAAK,KAAK,SAASD,GAC/B,MAAO,CACN,KAAQA,EACR,MAAS,MAAM,QAAQC,CAAK,EAAIA,EAAM,KAAK,GAAG,EAAIA,CACnD,CACD,CAAC,EACU,QAAQC,GAAQ,CAC1BH,EAAK,aAAaG,EAAK,KAAMA,EAAK,KAAK,CACxC,CAAC,EACDH,EAAK,aAAa,MAAOF,CAAG,EAC5BE,EAAK,OAASD,EAAS,KAAK,IAAI,EAChC,KAAK,KAAK,YAAYC,CAAI,CAC3B,CAEA,QAAS,CACR,UAAW,YAAa,KAAK,KAAK,KAAO,SAAS,EAClD,KAAK,QAAQ,iBAAiB,CAC/B,CACD,CCnEO,MAAMI,UAA0B,GAAO,CAE7C,YAAYhB,EAAI,CACf,MAAMA,CAAE,CACT,CAEA,MAAO,CACN,KAAK,UAAY,IAAIM,EAAU,KAAK,KAAK,cAAc,cAAc,CAAC,EACtE,KAAK,MAAM,CACZ,CACD,CAEO,SAASW,GAAiB,CAEhC,OADiB,IAAID,CAEtB,C,iCCnBe,MAAMT,CACrB,CACI,aACA,CACI,KAAK,UAAY,CAAC,EAClB,KAAK,UAAU,KAAO,CAAC,CAC3B,CAEA,GAAGW,EAAQP,EACX,CAEI,OAAG,OAAOO,GAAW,aAAeA,IAAW,IAE3C,QAAQ,KAAK,aAAa,EACnB,IAGR,OAAOP,GAAa,aAEnB,QAAQ,KAAK,gBAAgB,EACtB,KAIG,KAAK,aAAaO,CAAM,EAGhC,QAASC,GACf,CAEI,MAAMjB,EAAO,KAAK,YAAYiB,CAAK,EAG9B,KAAK,UAAWjB,EAAK,qBAAuB,SAC7C,KAAK,UAAWA,EAAK,WAAc,CAAC,GAGnC,KAAK,UAAWA,EAAK,WAAaA,EAAK,iBAAmB,QAC3D,KAAK,UAAWA,EAAK,WAAaA,EAAK,OAAU,CAAC,GAGtD,KAAK,UAAWA,EAAK,WAAaA,EAAK,OAAQ,KAAKS,CAAQ,CAChE,CAAC,EAEM,KACX,CAEA,IAAIO,EACJ,CAEI,OAAG,OAAOA,GAAW,aAAeA,IAAW,IAE3C,QAAQ,KAAK,YAAY,EAClB,KAIG,KAAK,aAAaA,CAAM,EAGhC,QAASC,GACf,CAEI,MAAMjB,EAAO,KAAK,YAAYiB,CAAK,EAGnC,GAAGjB,EAAK,YAAc,QAAUA,EAAK,QAAU,GAE3C,OAAO,KAAK,UAAWA,EAAK,mBAOzBA,EAAK,YAAc,OAGlB,UAAUkB,KAAa,KAAK,UAErB,KAAK,UAAWA,aAAuB,QAAU,KAAK,UAAWA,GAAalB,EAAK,iBAAmB,QAErG,OAAO,KAAK,UAAWkB,GAAalB,EAAK,OAGtC,OAAO,KAAK,KAAK,UAAWkB,EAAW,EAAE,SAAW,GACnD,OAAO,KAAK,UAAWA,SAM/B,KAAK,UAAWlB,EAAK,qBAAuB,QAAU,KAAK,UAAWA,EAAK,WAAaA,EAAK,iBAAmB,QAEpH,OAAO,KAAK,UAAWA,EAAK,WAAaA,EAAK,OAG3C,OAAO,KAAK,KAAK,UAAWA,EAAK,UAAW,EAAE,SAAW,GACxD,OAAO,KAAK,UAAWA,EAAK,WAG5C,CAAC,EAEM,KACX,CAEA,QAAQiB,EAAOE,EACf,CAEI,GAAG,OAAOF,GAAU,aAAeA,IAAU,GAEzC,eAAQ,KAAK,YAAY,EAClB,GAGX,IAAIG,EAAc,KACdC,EAAS,KAGb,MAAMC,EAASH,aAAiB,MAAcA,EAAL,CAAC,EAG1C,IAAInB,EAAO,KAAK,aAAaiB,CAAK,EAMlC,GAHAjB,EAAO,KAAK,YAAYA,EAAM,EAAG,EAG9BA,EAAK,YAAc,OAGlB,UAAUkB,KAAa,KAAK,UAErB,KAAK,UAAWA,aAAuB,QAAU,KAAK,UAAWA,GAAalB,EAAK,iBAAmB,OAErG,KAAK,UAAWkB,GAAalB,EAAK,OAAQ,QAAQ,SAASS,EAC3D,CACIY,EAASZ,EAAS,MAAM,KAAMa,CAAI,EAE/B,OAAOF,GAAgB,cAEtBA,EAAcC,EAEtB,CAAC,UAML,KAAK,UAAWrB,EAAK,qBAAuB,OACpD,CACI,GAAGA,EAAK,QAAU,GAEd,eAAQ,KAAK,YAAY,EAClB,KAGX,KAAK,UAAWA,EAAK,WAAaA,EAAK,OAAQ,QAAQ,SAASS,EAChE,CACIY,EAASZ,EAAS,MAAM,KAAMa,CAAI,EAE/B,OAAOF,GAAgB,cACtBA,EAAcC,EACtB,CAAC,CACL,CAEA,OAAOD,CACX,CAEA,aAAaJ,EACb,CACI,IAAIO,EAAQP,EACZ,OAAAO,EAAQA,EAAM,QAAQ,oBAAqB,EAAE,EAC7CA,EAAQA,EAAM,QAAQ,SAAU,GAAG,EACnCA,EAAQA,EAAM,MAAM,GAAG,EAEhBA,CACX,CAEA,YAAYvB,EACZ,CACI,MAAMwB,EAAU,CAAC,EACXC,EAAQzB,EAAK,MAAM,GAAG,EAE5B,OAAAwB,EAAQ,SAAYxB,EACpBwB,EAAQ,MAAYC,EAAO,GAC3BD,EAAQ,UAAY,OAGjBC,EAAM,OAAS,GAAKA,EAAO,KAAQ,KAElCD,EAAQ,UAAYC,EAAO,IAGxBD,CACX,CACJ,C","file":"videoPlayer.js","sourcesContent":["import EventEmitter from '../shared/EventEmitter.js';\nexport default class Module extends EventEmitter {\n\n\tconstructor(el) {\n\t\tsuper(el);\n\t}\n\n\tbind(node, name, options, time) {\n\t\tthis.node = node;\n\t\tthis.name = name;\n\t\tthis.options = options !== null ? options : {selectors: '', settings: ''};\n\t\t\n\t\tthis.setOptions();\n\t\tthis.init();\n\t}\n\n\tsetOptions() {}\n\n\tinit() {}\n\n\tready() {\n\t\tconst endingTime = Date.now();\n\t\tsetTimeout(() => this.trigger('ready', [endingTime]), 0.000001);\n\t}\n}\n","import EventEmitter from './EventEmitter.js';\r\nimport Logs from './logs.js';\r\nexport default class LazyEmbed extends EventEmitter {\r\n\r\n\tconstructor(node) {\r\n\t\tsuper();\r\n\t\tthis.node = node;\r\n\t\tthis.data = JSON.parse(node.getAttribute('data-embed'));\r\n\t\tthis.loaded();\r\n\t\tthis.switchCase();\r\n\t}\r\n\r\n\tswitchCase() {\r\n\t\tswitch(this.data.type) {\r\n\t\t\tcase 'form':\r\n\t\t\t\tthis.addScript(this.data.url, this.initForm);\r\n\t\t\tbreak;\r\n\t\t\tcase 'video':\r\n\t\t\t\tthis.addIframe(this.data.url, this.initVideo);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\tinitForm() {\r\n\t\tconst selector = 'id-' + this.data.settings.portalId;\r\n\t\tconst settings = Object.assign(this.data.settings, {\r\n\t\t\t'target': '#' + selector\r\n\t\t});\r\n\t\tthis.node.setAttribute('id', selector);\r\n\t\twindow.hbspt.forms.create(settings);\r\n\t\tif (document.getElementsByName(\"url_last_submission\")[0]) {\r\n\t\t\tdocument.getElementsByName(\"url_last_submission\")[0].value = document.location.href;\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\tinitVideo() {\r\n\t\t\r\n\t}\r\n\r\n\taddScript(src, callback) {\r\n\t\tconst item = document.createElement('script');\r\n\t\titem.setAttribute( 'charset', 'utf-8' );\r\n\t\titem.setAttribute( 'type', 'text/javascript' );\r\n\t\titem.setAttribute( 'src', src );\r\n\t\titem.onload = callback.bind(this);\r\n\t\tthis.node.appendChild(item);\r\n\t}\r\n\r\n\taddIframe(src, callback) {\r\n\t\tconst item = document.createElement('iframe');\r\n\t\tconst attributes = Object.keys(this.data.settings).map((key) => {\r\n\t\t\tlet value = this.data.settings[key];\r\n\t\t\treturn { \r\n\t\t\t\t'name': key, \r\n\t\t\t\t'value': Array.isArray(value) ? value.join(';') : value\r\n\t\t\t}\r\n\t\t});\r\n\t\tattributes.forEach(attr => {\r\n\t\t\titem.setAttribute(attr.name, attr.value);\r\n\t\t})\r\n\t\titem.setAttribute('src', src);\r\n\t\titem.onload = callback.bind(this);\r\n\t\tthis.node.appendChild(item);\r\n\t}\r\n\r\n\tloaded() {\r\n\t\tLogs.debug('LazyEmbed', this.data.type + ' loaded');\r\n\t\tthis.trigger('lazyEmbedLoaded');\r\n\t}\r\n}\r\n","import Module from '../module.js';\r\nimport LazyEmbed from '../../shared/LazyEmbed.js';\r\nimport './video-player.scss';\r\n\r\nexport class VideoPlayerModule extends Module {\r\n\r\n\tconstructor(el) {\r\n\t\tsuper(el);\r\n\t}\r\n\r\n\tinit() {\r\n\t\tthis.lazyEmbed = new LazyEmbed(this.node.querySelector('[data-embed]'));\r\n\t\tthis.ready()\r\n\t}\r\n}\r\n\r\nexport function createInstance() {\r\n\tconst instance = new VideoPlayerModule();\r\n\treturn instance;\r\n}\r\n","export default class EventEmitter\n{\n    constructor()\n    {\n        this.callbacks = {}\n        this.callbacks.base = {}\n    }\n\n    on(_names, callback)\n    {\n        // Errors\n        if(typeof _names === 'undefined' || _names === '')\n        {\n            console.warn('wrong names')\n            return false\n        }\n\n        if(typeof callback === 'undefined')\n        {\n            console.warn('wrong callback')\n            return false\n        }\n\n        // Resolve names\n        const names = this.resolveNames(_names)\n\n        // Each name\n        names.forEach((_name) =>\n        {\n            // Resolve name\n            const name = this.resolveName(_name)\n\n            // Create namespace if not exist\n            if(!(this.callbacks[ name.namespace ] instanceof Object))\n                this.callbacks[ name.namespace ] = {}\n\n            // Create callback if not exist\n            if(!(this.callbacks[ name.namespace ][ name.value ] instanceof Array))\n                this.callbacks[ name.namespace ][ name.value ] = []\n\n            // Add callback\n            this.callbacks[ name.namespace ][ name.value ].push(callback)\n        })\n\n        return this\n    }\n\n    off(_names)\n    {\n        // Errors\n        if(typeof _names === 'undefined' || _names === '')\n        {\n            console.warn('wrong name')\n            return false\n        }\n\n        // Resolve names\n        const names = this.resolveNames(_names)\n\n        // Each name\n        names.forEach((_name) =>\n        {\n            // Resolve name\n            const name = this.resolveName(_name)\n\n            // Remove namespace\n            if(name.namespace !== 'base' && name.value === '')\n            {\n                delete this.callbacks[ name.namespace ]\n            }\n\n            // Remove specific callback in namespace\n            else\n            {\n                // Default\n                if(name.namespace === 'base')\n                {\n                    // Try to remove from each namespace\n                    for(const namespace in this.callbacks)\n                    {\n                        if(this.callbacks[ namespace ] instanceof Object && this.callbacks[ namespace ][ name.value ] instanceof Array)\n                        {\n                            delete this.callbacks[ namespace ][ name.value ]\n\n                            // Remove namespace if empty\n                            if(Object.keys(this.callbacks[ namespace ]).length === 0)\n                                delete this.callbacks[ namespace ]\n                        }\n                    }\n                }\n\n                // Specified namespace\n                else if(this.callbacks[ name.namespace ] instanceof Object && this.callbacks[ name.namespace ][ name.value ] instanceof Array)\n                {\n                    delete this.callbacks[ name.namespace ][ name.value ]\n\n                    // Remove namespace if empty\n                    if(Object.keys(this.callbacks[ name.namespace ]).length === 0)\n                        delete this.callbacks[ name.namespace ]\n                }\n            }\n        })\n\n        return this\n    }\n\n    trigger(_name, _args)\n    {\n        // Errors\n        if(typeof _name === 'undefined' || _name === '')\n        {\n            console.warn('wrong name')\n            return false\n        }\n\n        let finalResult = null\n        let result = null\n\n        // Default args\n        const args = !(_args instanceof Array) ? [] : _args\n\n        // Resolve names (should on have one event)\n        let name = this.resolveNames(_name)\n\n        // Resolve name\n        name = this.resolveName(name[ 0 ])\n\n        // Default namespace\n        if(name.namespace === 'base')\n        {\n            // Try to find callback in each namespace\n            for(const namespace in this.callbacks)\n            {\n                if(this.callbacks[ namespace ] instanceof Object && this.callbacks[ namespace ][ name.value ] instanceof Array)\n                {\n                    this.callbacks[ namespace ][ name.value ].forEach(function(callback)\n                    {\n                        result = callback.apply(this, args)\n\n                        if(typeof finalResult === 'undefined')\n                        {\n                            finalResult = result\n                        }\n                    })\n                }\n            }\n        }\n\n        // Specified namespace\n        else if(this.callbacks[ name.namespace ] instanceof Object)\n        {\n            if(name.value === '')\n            {\n                console.warn('wrong name')\n                return this\n            }\n\n            this.callbacks[ name.namespace ][ name.value ].forEach(function(callback)\n            {\n                result = callback.apply(this, args)\n\n                if(typeof finalResult === 'undefined')\n                    finalResult = result\n            })\n        }\n\n        return finalResult\n    }\n\n    resolveNames(_names)\n    {\n        let names = _names\n        names = names.replace(/[^a-zA-Z0-9 ,/.]/g, '')\n        names = names.replace(/[,/]+/g, ' ')\n        names = names.split(' ')\n\n        return names\n    }\n\n    resolveName(name)\n    {\n        const newName = {}\n        const parts = name.split('.')\n\n        newName.original  = name\n        newName.value     = parts[ 0 ]\n        newName.namespace = 'base' // Base namespace\n\n        // Specified namespace\n        if(parts.length > 1 && parts[ 1 ] !== '')\n        {\n            newName.namespace = parts[ 1 ]\n        }\n\n        return newName\n    }\n}"],"sourceRoot":""}