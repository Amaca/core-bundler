{"version":3,"file":"features.js","mappings":"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","sources":["webpack://core-bundler/./src/app/modules/features/features.js","webpack://core-bundler/./src/app/modules/module.js","webpack://core-bundler/./src/app/shared/EventEmitter.js"],"sourcesContent":["import Module from '../module.js';\r\nimport './features.scss';\r\n\r\nexport class FeaturesModule extends Module {\r\n\r\n\tconstructor(el) {\r\n\t\tsuper(el);\r\n\t}\r\n\r\n\tinit() {\r\n\t\tthis.ready();\r\n\t}\r\n}\r\n\r\nexport function createInstance() {\r\n\tconst instance = new FeaturesModule();\r\n\treturn instance;\r\n}\r\n","import EventEmitter from '../shared/EventEmitter.js';\nexport default class Module extends EventEmitter {\n\n\tconstructor(el) {\n\t\tsuper(el);\n\t}\n\n\tbind(node, name, options, time) {\n\t\tthis.node = node;\n\t\tthis.name = name;\n\t\tthis.options = options !== null ? options : {selectors: '', settings: ''};\n\t\t\n\t\tthis.setOptions();\n\t\tthis.init();\n\t}\n\n\tsetOptions() {}\n\n\tinit() {}\n\n\tready() {\n\t\tconst endingTime = Date.now();\n\t\tsetTimeout(() => this.trigger('ready', [endingTime]), 0.000001);\n\t}\n}\n","export default class EventEmitter\n{\n    constructor()\n    {\n        this.callbacks = {}\n        this.callbacks.base = {}\n    }\n\n    on(_names, callback)\n    {\n        // Errors\n        if(typeof _names === 'undefined' || _names === '')\n        {\n            console.warn('wrong names')\n            return false\n        }\n\n        if(typeof callback === 'undefined')\n        {\n            console.warn('wrong callback')\n            return false\n        }\n\n        // Resolve names\n        const names = this.resolveNames(_names)\n\n        // Each name\n        names.forEach((_name) =>\n        {\n            // Resolve name\n            const name = this.resolveName(_name)\n\n            // Create namespace if not exist\n            if(!(this.callbacks[ name.namespace ] instanceof Object))\n                this.callbacks[ name.namespace ] = {}\n\n            // Create callback if not exist\n            if(!(this.callbacks[ name.namespace ][ name.value ] instanceof Array))\n                this.callbacks[ name.namespace ][ name.value ] = []\n\n            // Add callback\n            this.callbacks[ name.namespace ][ name.value ].push(callback)\n        })\n\n        return this\n    }\n\n    off(_names)\n    {\n        // Errors\n        if(typeof _names === 'undefined' || _names === '')\n        {\n            console.warn('wrong name')\n            return false\n        }\n\n        // Resolve names\n        const names = this.resolveNames(_names)\n\n        // Each name\n        names.forEach((_name) =>\n        {\n            // Resolve name\n            const name = this.resolveName(_name)\n\n            // Remove namespace\n            if(name.namespace !== 'base' && name.value === '')\n            {\n                delete this.callbacks[ name.namespace ]\n            }\n\n            // Remove specific callback in namespace\n            else\n            {\n                // Default\n                if(name.namespace === 'base')\n                {\n                    // Try to remove from each namespace\n                    for(const namespace in this.callbacks)\n                    {\n                        if(this.callbacks[ namespace ] instanceof Object && this.callbacks[ namespace ][ name.value ] instanceof Array)\n                        {\n                            delete this.callbacks[ namespace ][ name.value ]\n\n                            // Remove namespace if empty\n                            if(Object.keys(this.callbacks[ namespace ]).length === 0)\n                                delete this.callbacks[ namespace ]\n                        }\n                    }\n                }\n\n                // Specified namespace\n                else if(this.callbacks[ name.namespace ] instanceof Object && this.callbacks[ name.namespace ][ name.value ] instanceof Array)\n                {\n                    delete this.callbacks[ name.namespace ][ name.value ]\n\n                    // Remove namespace if empty\n                    if(Object.keys(this.callbacks[ name.namespace ]).length === 0)\n                        delete this.callbacks[ name.namespace ]\n                }\n            }\n        })\n\n        return this\n    }\n\n    trigger(_name, _args)\n    {\n        // Errors\n        if(typeof _name === 'undefined' || _name === '')\n        {\n            console.warn('wrong name')\n            return false\n        }\n\n        let finalResult = null\n        let result = null\n\n        // Default args\n        const args = !(_args instanceof Array) ? [] : _args\n\n        // Resolve names (should on have one event)\n        let name = this.resolveNames(_name)\n\n        // Resolve name\n        name = this.resolveName(name[ 0 ])\n\n        // Default namespace\n        if(name.namespace === 'base')\n        {\n            // Try to find callback in each namespace\n            for(const namespace in this.callbacks)\n            {\n                if(this.callbacks[ namespace ] instanceof Object && this.callbacks[ namespace ][ name.value ] instanceof Array)\n                {\n                    this.callbacks[ namespace ][ name.value ].forEach(function(callback)\n                    {\n                        result = callback.apply(this, args)\n\n                        if(typeof finalResult === 'undefined')\n                        {\n                            finalResult = result\n                        }\n                    })\n                }\n            }\n        }\n\n        // Specified namespace\n        else if(this.callbacks[ name.namespace ] instanceof Object)\n        {\n            if(name.value === '')\n            {\n                console.warn('wrong name')\n                return this\n            }\n\n            this.callbacks[ name.namespace ][ name.value ].forEach(function(callback)\n            {\n                result = callback.apply(this, args)\n\n                if(typeof finalResult === 'undefined')\n                    finalResult = result\n            })\n        }\n\n        return finalResult\n    }\n\n    resolveNames(_names)\n    {\n        let names = _names\n        names = names.replace(/[^a-zA-Z0-9 ,/.]/g, '')\n        names = names.replace(/[,/]+/g, ' ')\n        names = names.split(' ')\n\n        return names\n    }\n\n    resolveName(name)\n    {\n        const newName = {}\n        const parts = name.split('.')\n\n        newName.original  = name\n        newName.value     = parts[ 0 ]\n        newName.namespace = 'base' // Base namespace\n\n        // Specified namespace\n        if(parts.length > 1 && parts[ 1 ] !== '')\n        {\n            newName.namespace = parts[ 1 ]\n        }\n\n        return newName\n    }\n}"],"names":["FeaturesModule","Module","constructor","el","super","init","this","ready","createInstance","EventEmitter","bind","node","name","options","time","selectors","settings","setOptions","endingTime","Date","now","setTimeout","trigger","callbacks","base","on","_names","callback","console","warn","resolveNames","forEach","_name","resolveName","namespace","Object","value","Array","push","off","keys","length","_args","finalResult","result","args","apply","names","replace","split","newName","parts","original"],"sourceRoot":""}