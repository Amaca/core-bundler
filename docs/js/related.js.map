{"version":3,"file":"related.js","mappings":"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","sources":["webpack://core-bundler/./src/app/modules/module.js","webpack://core-bundler/./src/app/modules/related/related.js","webpack://core-bundler/./src/app/shared/EventEmitter.js"],"sourcesContent":["import EventEmitter from '../shared/EventEmitter.js';\nexport default class Module extends EventEmitter {\n\n\tconstructor(el) {\n\t\tsuper(el);\n\t}\n\n\tbind(node, name, options, time) {\n\t\tthis.node = node;\n\t\tthis.name = name;\n\t\tthis.options = options !== null ? options : {selectors: '', settings: ''};\n\t\t\n\t\tthis.setOptions();\n\t\tthis.init();\n\t}\n\n\tsetOptions() {}\n\n\tinit() {}\n\n\tready() {\n\t\tconst endingTime = Date.now();\n\t\tsetTimeout(() => this.trigger('ready', [endingTime]), 0.000001);\n\t}\n}\n","import Module from '../module.js';\r\nimport './related.scss';\r\n\r\nexport class RelatedModule extends Module {\r\n\r\n\tconstructor(el) {\r\n\t\tsuper(el);\r\n\t}\r\n\r\n\tinit() {\r\n\t\tthis.ready();\r\n\t}\r\n}\r\n\r\nexport function createInstance() {\r\n\tconst instance = new RelatedModule();\r\n\treturn instance;\r\n}\r\n","export default class EventEmitter\n{\n    constructor()\n    {\n        this.callbacks = {}\n        this.callbacks.base = {}\n    }\n\n    on(_names, callback)\n    {\n        // Errors\n        if(typeof _names === 'undefined' || _names === '')\n        {\n            console.warn('wrong names')\n            return false\n        }\n\n        if(typeof callback === 'undefined')\n        {\n            console.warn('wrong callback')\n            return false\n        }\n\n        // Resolve names\n        const names = this.resolveNames(_names)\n\n        // Each name\n        names.forEach((_name) =>\n        {\n            // Resolve name\n            const name = this.resolveName(_name)\n\n            // Create namespace if not exist\n            if(!(this.callbacks[ name.namespace ] instanceof Object))\n                this.callbacks[ name.namespace ] = {}\n\n            // Create callback if not exist\n            if(!(this.callbacks[ name.namespace ][ name.value ] instanceof Array))\n                this.callbacks[ name.namespace ][ name.value ] = []\n\n            // Add callback\n            this.callbacks[ name.namespace ][ name.value ].push(callback)\n        })\n\n        return this\n    }\n\n    off(_names)\n    {\n        // Errors\n        if(typeof _names === 'undefined' || _names === '')\n        {\n            console.warn('wrong name')\n            return false\n        }\n\n        // Resolve names\n        const names = this.resolveNames(_names)\n\n        // Each name\n        names.forEach((_name) =>\n        {\n            // Resolve name\n            const name = this.resolveName(_name)\n\n            // Remove namespace\n            if(name.namespace !== 'base' && name.value === '')\n            {\n                delete this.callbacks[ name.namespace ]\n            }\n\n            // Remove specific callback in namespace\n            else\n            {\n                // Default\n                if(name.namespace === 'base')\n                {\n                    // Try to remove from each namespace\n                    for(const namespace in this.callbacks)\n                    {\n                        if(this.callbacks[ namespace ] instanceof Object && this.callbacks[ namespace ][ name.value ] instanceof Array)\n                        {\n                            delete this.callbacks[ namespace ][ name.value ]\n\n                            // Remove namespace if empty\n                            if(Object.keys(this.callbacks[ namespace ]).length === 0)\n                                delete this.callbacks[ namespace ]\n                        }\n                    }\n                }\n\n                // Specified namespace\n                else if(this.callbacks[ name.namespace ] instanceof Object && this.callbacks[ name.namespace ][ name.value ] instanceof Array)\n                {\n                    delete this.callbacks[ name.namespace ][ name.value ]\n\n                    // Remove namespace if empty\n                    if(Object.keys(this.callbacks[ name.namespace ]).length === 0)\n                        delete this.callbacks[ name.namespace ]\n                }\n            }\n        })\n\n        return this\n    }\n\n    trigger(_name, _args)\n    {\n        // Errors\n        if(typeof _name === 'undefined' || _name === '')\n        {\n            console.warn('wrong name')\n            return false\n        }\n\n        let finalResult = null\n        let result = null\n\n        // Default args\n        const args = !(_args instanceof Array) ? [] : _args\n\n        // Resolve names (should on have one event)\n        let name = this.resolveNames(_name)\n\n        // Resolve name\n        name = this.resolveName(name[ 0 ])\n\n        // Default namespace\n        if(name.namespace === 'base')\n        {\n            // Try to find callback in each namespace\n            for(const namespace in this.callbacks)\n            {\n                if(this.callbacks[ namespace ] instanceof Object && this.callbacks[ namespace ][ name.value ] instanceof Array)\n                {\n                    this.callbacks[ namespace ][ name.value ].forEach(function(callback)\n                    {\n                        result = callback.apply(this, args)\n\n                        if(typeof finalResult === 'undefined')\n                        {\n                            finalResult = result\n                        }\n                    })\n                }\n            }\n        }\n\n        // Specified namespace\n        else if(this.callbacks[ name.namespace ] instanceof Object)\n        {\n            if(name.value === '')\n            {\n                console.warn('wrong name')\n                return this\n            }\n\n            this.callbacks[ name.namespace ][ name.value ].forEach(function(callback)\n            {\n                result = callback.apply(this, args)\n\n                if(typeof finalResult === 'undefined')\n                    finalResult = result\n            })\n        }\n\n        return finalResult\n    }\n\n    resolveNames(_names)\n    {\n        let names = _names\n        names = names.replace(/[^a-zA-Z0-9 ,/.]/g, '')\n        names = names.replace(/[,/]+/g, ' ')\n        names = names.split(' ')\n\n        return names\n    }\n\n    resolveName(name)\n    {\n        const newName = {}\n        const parts = name.split('.')\n\n        newName.original  = name\n        newName.value     = parts[ 0 ]\n        newName.namespace = 'base' // Base namespace\n\n        // Specified namespace\n        if(parts.length > 1 && parts[ 1 ] !== '')\n        {\n            newName.namespace = parts[ 1 ]\n        }\n\n        return newName\n    }\n}"],"names":["Module","EventEmitter","constructor","el","super","bind","node","name","options","time","this","selectors","settings","setOptions","init","ready","endingTime","Date","now","setTimeout","trigger","RelatedModule","createInstance","callbacks","base","on","_names","callback","console","warn","resolveNames","forEach","_name","resolveName","namespace","Object","value","Array","push","off","keys","length","_args","finalResult","result","args","apply","names","replace","split","newName","parts","original"],"sourceRoot":""}