{"version":3,"file":"accordion.js","mappings":"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","sources":["webpack://core-bundler/./src/app/modules/accordion/accordion.selectFilters.js","webpack://core-bundler/./src/app/modules/accordion/accordion.js","webpack://core-bundler/./src/app/modules/module.js","webpack://core-bundler/./src/app/shared/EventEmitter.js"],"sourcesContent":["\r\nexport default class AccordionSelectFilters {\r\n\r\n\tconstructor(node, selectAttribute, categoriesAttribute) {\r\n\t\tthis.node = node;\r\n\t\tthis.selectAttribute = selectAttribute;\r\n\t\tthis.categoriesAttribute = categoriesAttribute;\r\n\t\tthis.select = this.node.querySelector(`[${this.selectAttribute}]`)\r\n\t\tthis.categories = Array.from(this.node.querySelectorAll(`[${this.categoriesAttribute}]`));\r\n\r\n\t\tthis.data = this.getData();\r\n\t\t\r\n\r\n\t\tif (this.select != undefined) {\r\n\t\t\tthis.addListener();\r\n\t\t}\r\n\t}\r\n\r\n\taddListener() {\r\n\t\tthis.select.addEventListener('change', (e) => {\r\n\t\t\tthis.onChange(e.currentTarget)\r\n\t\t});\r\n\t}\r\n\r\n\tgetData() {\r\n\t\tlet filteredArray = [];\r\n\t\tthis.categories.forEach(category => {\r\n\t\t\tfilteredArray.push({\r\n\t\t\t\tnode: category,\r\n\t\t\t\tcategories: category.getAttribute(this.categoriesAttribute).replace(/\\s/g, '').split(',')\r\n\t\t\t})\r\n\t\t})\r\n\t\treturn filteredArray;\r\n\t}\r\n\r\n\tonChange(node) {\r\n\t\tthis.currentSelection = node.options[node.selectedIndex].value;\r\n\t\tif (this.currentSelection !== '0') {\r\n\t\t\tthis.filterCategory();\r\n\t\t} else {\r\n\t\t\tthis.reset();\r\n\t\t}\r\n\t}\r\n\r\n\tfilterCategory() {\r\n\t\tlet selectedElements = [];\r\n\t\tthis.data.forEach(item => {\r\n\t\t\titem.node.style.display = 'none';\r\n\t\t\tconst findCat = item.categories.find(x => {\r\n\t\t\t\treturn x === this.currentSelection;\r\n\t\t\t})\r\n\t\t\tif(findCat !== undefined) {\r\n\t\t\t\tselectedElements.push(item)\r\n\t\t\t}\r\n\t\t})\r\n\t\tselectedElements.forEach(item => item.node.style.display = 'block');\r\n\t}\r\n\r\n\treset() {\r\n\t\tthis.data.forEach(item => item.node.style.display = 'block');\r\n\t}\r\n}\r\n","import Module from '../module.js';\r\nimport AccordionSelectFilters from \"./accordion.selectFilters.js\";\r\n\r\nimport './accordion.scss';\r\n\r\nexport default class AccordionModule extends Module {\r\n\r\n\tconstructor(el) {\r\n\t\tsuper(el);\r\n\t}\r\n\r\n\tinit() {\r\n\t\tthis.setup();\r\n\t\tif (typeof(this.settings.defaultElementId) === 'number' && this.settings.defaultElementId <= this.buttons.length) {\r\n\t\t\tthis.contentHeight = this.getHeight(this.contents[this.settings.defaultElementId]);\r\n\t\t\tthis.open(this.buttons[this.settings.defaultElementId], this.contents[this.settings.defaultElementId]);\r\n\t\t}\r\n\t\tif(this.settings.filtersSelect) {\r\n\t\t\tthis.filtersSelect = new AccordionSelectFilters(\r\n\t\t\t\tthis.node,\r\n\t\t\t\tthis.selectors.filtersSelect.select,\r\n\t\t\t\tthis.selectors.filtersSelect.category\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\tsetup() {\r\n\t\t//default selectors\r\n\t\tthis.selectors = {\r\n\t\t\tbuttonAttribute: 'accordion-button',\r\n\t\t\tcontentAttribute: 'accordion-content',\r\n\t\t\tfiltersSelect: {\r\n\t\t\t\tselect: 'data-accordion-select',\r\n\t\t\t\tcategory: 'data-accordion-cat'\r\n\t\t\t},\r\n\t\t\tactiveClass: 'active',\r\n\t\t};\r\n\r\n\t\t//default settings\r\n\t\tthis.settings = {\r\n\t\t\tcloseOthers: false,\r\n\t\t\ttoggleCurrent: false,\r\n\t\t\tdefaultElementId: 0,\r\n\t\t\tfiltersSelect: false,\r\n\t\t\tanimations: false //import gsap\r\n\t\t}\r\n\r\n\t\tif (this.options.selectors) { // assign custom selectors\r\n\t\t\tthis.selectors = Object.assign(this.selectors, this.options.selectors);\r\n\t\t}\r\n\r\n\t\tif(this.options.settings) { // assign custom settings\r\n\t\t\tthis.settings = Object.assign(this.settings, this.options.settings);\r\n\t\t}\r\n\r\n\t\t//import gsap 3.0 for animations: https://greensock.com/docs/v3/GSAP and uncomment lines:\r\n\t\t//if (this.settings.animations) {\r\n\t\t\t//this.gsap = gsap; \r\n\t\t\t//this.onCompleteAnim;\r\n\t\t//}\r\n\r\n\t\tthis.buttons = Array.from(this.node.querySelectorAll(`[${this.selectors.buttonAttribute}]`));\r\n\t\tthis.contents = Array.from(this.node.querySelectorAll(`[${this.selectors.contentAttribute}]`));\r\n\t\t\r\n\t\tthis.addListeners();\r\n\t\tthis.ready();\r\n\t}\r\n\r\n\taddListeners() {\r\n\t\tthis.buttons.forEach(button => {\r\n\t\t\tbutton.addEventListener('click', this.onClick.bind(this));\r\n\t\t});\r\n\t\twindow.addEventListener('resize', this.onResize.bind(this));\r\n\t}\r\n\r\n\tonClick(e) {\r\n\t\tconst button = e.currentTarget;\r\n\t\tif(!button) {\r\n\t\t\treturn\r\n\t\t}\r\n\t\tthis.currentId = button.getAttribute(this.selectors.buttonAttribute);\r\n\t\t\r\n\t\t//set active button or close the current active button\r\n\t\tif (!button.classList.contains(this.selectors.activeClass)) {\r\n\t\t\tthis.reset();\r\n\t\t\tthis.setActive(button);\r\n\t\t} else if (!this.settings.toggleCurrent) {\r\n\t\t\tthis.close(button, this.contents[this.currentId]);\r\n\t\t}\r\n\t}\r\n\r\n\tsetActive(button) {\r\n\t\tthis.contents.forEach(content => {\r\n\t\t\tconst contentId = content.getAttribute(this.selectors.contentAttribute);\r\n\t\t\tconst isCurrent = contentId === this.currentId;\r\n\t\t\tconst hasActive = button.classList.contains(this.selectors.activeClass);\r\n\t\t\tif (!(isCurrent && !hasActive)) {\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\tthis.contentHeight = this.getHeight(content);\r\n\t\t\tthis.open(button, content);\r\n\t\t})\r\n\t}\r\n\r\n\treset() {\r\n\t\tthis.buttons.forEach((button, i) => {\r\n\t\t\tconst isOpen = button.getAttribute(this.selectors.buttonAttribute) !== this.currentId;\r\n\t\t\tconst hasActive = button.classList.contains(this.selectors.activeClass);\r\n\t\t\tif (!(hasActive && isOpen)) {\r\n\t\t\t\treturn\r\n\t\t\t} \r\n\t\t\tthis.contentHeight = this.getHeight(this.contents[i]);\r\n\t\t\t\r\n\t\t\t//close other panels on click\r\n\t\t\tif (this.settings.closeOthers) { \r\n\t\t\t\tthis.close(button, this.contents[i]);\r\n\t\t\t};\r\n\t\t});\r\n\t}\r\n\r\n\tgetHeight(elem) {\r\n\t\tif(elem !== null){\r\n\t\t\telem.style.height = 'auto';\r\n\t\t\telem.style.display = 'block';\r\n\t\t\treturn elem.offsetHeight !== 0 ? elem.offsetHeight : this.contentHeight;\r\n\t\t} else return\r\n\t}\r\n\r\n\topen(button, content) {\r\n\t\tthis.onOpen(content);\r\n\t\t//console.log('open ', this.selectors.activeClass);\r\n\t\tbutton.classList.add(this.selectors.activeClass);\r\n\t\tcontent.classList.add(this.selectors.activeClass);\r\n\t}\r\n\r\n\tclose(button, content) {\r\n\t\tthis.onClose(content);\r\n\t\t//console.log('close ', this.selectors.activeClass);\r\n\t\tbutton.classList.remove(this.selectors.activeClass);\r\n\t\tcontent.classList.remove(this.selectors.activeClass);\r\n\t}\r\n\r\n\tonOpen(elem) {\r\n\t\tif (!this.settings.animations) {\r\n\t\t\telem.style.height = this.contentHeight;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t//gsap animation\r\n\t\tthis.onCompleteAnim = false;\r\n\t\tthis.gsap.set(elem, { height: 0 });\r\n\t\tthis.gsap.to(elem, 0.4, {\r\n\t\t\theight: this.contentHeight,\r\n\t\t\tease: Power2.easeOut,\r\n\t\t\tonComplete: () => {\r\n\t\t\t\tthis.onCompleteAnim = true;\r\n\t\t\t}\r\n\t\t});\t\r\n\t}\r\n\r\n\tonClose(elem) {\r\n\t\tif (!this.settings.animations) {\r\n\t\t\telem.style.height = 0;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t//gsap animation\r\n\t\tthis.onCompleteAnim = false;\r\n\t\tthis.gsap.to(elem, 0.4, {\r\n\t\t\theight: 0,\r\n\t\t\tease: Power2.easeOut,\r\n\t\t\tonComplete: () => {\r\n\t\t\t\tthis.onCompleteAnim = true;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tonResize() {\r\n\t\tconst content = this.node.querySelector(`[${this.selectors.contentAttribute}=\"${this.currentId}\"]`);\r\n\t\tif (!content) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t    this.contentHeight = this.getHeight(content);\r\n\t\tcontent.style.height = this.contentHeight;\r\n\t}\r\n}\r\n\r\nexport function createInstance() {\r\n\tconst instance = new AccordionModule();\r\n\treturn instance;\r\n}","import EventEmitter from '../shared/EventEmitter.js';\nexport default class Module extends EventEmitter {\n\n\tconstructor(el) {\n\t\tsuper(el);\n\t}\n\n\tbind(node, name, options, time) {\n\t\tthis.node = node;\n\t\tthis.name = name;\n\t\tthis.options = options !== null ? options : {selectors: '', settings: ''};\n\t\t\n\t\tthis.setOptions();\n\t\tthis.init();\n\t}\n\n\tsetOptions() {}\n\n\tinit() {}\n\n\tready() {\n\t\tconst endingTime = Date.now();\n\t\tsetTimeout(() => this.trigger('ready', [endingTime]), 0.000001);\n\t}\n}\n","export default class EventEmitter\n{\n    constructor()\n    {\n        this.callbacks = {}\n        this.callbacks.base = {}\n    }\n\n    on(_names, callback)\n    {\n        // Errors\n        if(typeof _names === 'undefined' || _names === '')\n        {\n            console.warn('wrong names')\n            return false\n        }\n\n        if(typeof callback === 'undefined')\n        {\n            console.warn('wrong callback')\n            return false\n        }\n\n        // Resolve names\n        const names = this.resolveNames(_names)\n\n        // Each name\n        names.forEach((_name) =>\n        {\n            // Resolve name\n            const name = this.resolveName(_name)\n\n            // Create namespace if not exist\n            if(!(this.callbacks[ name.namespace ] instanceof Object))\n                this.callbacks[ name.namespace ] = {}\n\n            // Create callback if not exist\n            if(!(this.callbacks[ name.namespace ][ name.value ] instanceof Array))\n                this.callbacks[ name.namespace ][ name.value ] = []\n\n            // Add callback\n            this.callbacks[ name.namespace ][ name.value ].push(callback)\n        })\n\n        return this\n    }\n\n    off(_names)\n    {\n        // Errors\n        if(typeof _names === 'undefined' || _names === '')\n        {\n            console.warn('wrong name')\n            return false\n        }\n\n        // Resolve names\n        const names = this.resolveNames(_names)\n\n        // Each name\n        names.forEach((_name) =>\n        {\n            // Resolve name\n            const name = this.resolveName(_name)\n\n            // Remove namespace\n            if(name.namespace !== 'base' && name.value === '')\n            {\n                delete this.callbacks[ name.namespace ]\n            }\n\n            // Remove specific callback in namespace\n            else\n            {\n                // Default\n                if(name.namespace === 'base')\n                {\n                    // Try to remove from each namespace\n                    for(const namespace in this.callbacks)\n                    {\n                        if(this.callbacks[ namespace ] instanceof Object && this.callbacks[ namespace ][ name.value ] instanceof Array)\n                        {\n                            delete this.callbacks[ namespace ][ name.value ]\n\n                            // Remove namespace if empty\n                            if(Object.keys(this.callbacks[ namespace ]).length === 0)\n                                delete this.callbacks[ namespace ]\n                        }\n                    }\n                }\n\n                // Specified namespace\n                else if(this.callbacks[ name.namespace ] instanceof Object && this.callbacks[ name.namespace ][ name.value ] instanceof Array)\n                {\n                    delete this.callbacks[ name.namespace ][ name.value ]\n\n                    // Remove namespace if empty\n                    if(Object.keys(this.callbacks[ name.namespace ]).length === 0)\n                        delete this.callbacks[ name.namespace ]\n                }\n            }\n        })\n\n        return this\n    }\n\n    trigger(_name, _args)\n    {\n        // Errors\n        if(typeof _name === 'undefined' || _name === '')\n        {\n            console.warn('wrong name')\n            return false\n        }\n\n        let finalResult = null\n        let result = null\n\n        // Default args\n        const args = !(_args instanceof Array) ? [] : _args\n\n        // Resolve names (should on have one event)\n        let name = this.resolveNames(_name)\n\n        // Resolve name\n        name = this.resolveName(name[ 0 ])\n\n        // Default namespace\n        if(name.namespace === 'base')\n        {\n            // Try to find callback in each namespace\n            for(const namespace in this.callbacks)\n            {\n                if(this.callbacks[ namespace ] instanceof Object && this.callbacks[ namespace ][ name.value ] instanceof Array)\n                {\n                    this.callbacks[ namespace ][ name.value ].forEach(function(callback)\n                    {\n                        result = callback.apply(this, args)\n\n                        if(typeof finalResult === 'undefined')\n                        {\n                            finalResult = result\n                        }\n                    })\n                }\n            }\n        }\n\n        // Specified namespace\n        else if(this.callbacks[ name.namespace ] instanceof Object)\n        {\n            if(name.value === '')\n            {\n                console.warn('wrong name')\n                return this\n            }\n\n            this.callbacks[ name.namespace ][ name.value ].forEach(function(callback)\n            {\n                result = callback.apply(this, args)\n\n                if(typeof finalResult === 'undefined')\n                    finalResult = result\n            })\n        }\n\n        return finalResult\n    }\n\n    resolveNames(_names)\n    {\n        let names = _names\n        names = names.replace(/[^a-zA-Z0-9 ,/.]/g, '')\n        names = names.replace(/[,/]+/g, ' ')\n        names = names.split(' ')\n\n        return names\n    }\n\n    resolveName(name)\n    {\n        const newName = {}\n        const parts = name.split('.')\n\n        newName.original  = name\n        newName.value     = parts[ 0 ]\n        newName.namespace = 'base' // Base namespace\n\n        // Specified namespace\n        if(parts.length > 1 && parts[ 1 ] !== '')\n        {\n            newName.namespace = parts[ 1 ]\n        }\n\n        return newName\n    }\n}"],"names":["AccordionSelectFilters","constructor","node","selectAttribute","categoriesAttribute","this","select","querySelector","categories","Array","from","querySelectorAll","data","getData","undefined","addListener","addEventListener","e","onChange","currentTarget","filteredArray","forEach","category","push","getAttribute","replace","split","currentSelection","options","selectedIndex","value","filterCategory","reset","selectedElements","item","style","display","find","x","AccordionModule","Module","el","super","init","setup","settings","defaultElementId","buttons","length","contentHeight","getHeight","contents","open","filtersSelect","selectors","buttonAttribute","contentAttribute","activeClass","closeOthers","toggleCurrent","animations","Object","assign","addListeners","ready","button","onClick","bind","window","onResize","currentId","classList","contains","close","setActive","content","isCurrent","hasActive","i","isOpen","elem","height","offsetHeight","onOpen","add","onClose","remove","onCompleteAnim","gsap","set","to","ease","Power2","easeOut","onComplete","createInstance","EventEmitter","name","time","setOptions","endingTime","Date","now","setTimeout","trigger","callbacks","base","on","_names","callback","console","warn","resolveNames","_name","resolveName","namespace","off","keys","_args","finalResult","result","args","apply","names","newName","parts","original"],"sourceRoot":""}