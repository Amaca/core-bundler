{"version":3,"file":"videoPlayer.js","mappings":"uIACe,MAAMA,UAAeC,EAAAA,EAEnCC,YAAYC,GACXC,MAAMD,EACN,CAEDE,KAAKC,EAAMC,EAAMC,EAASC,GACzBC,KAAKJ,KAAOA,EACZI,KAAKH,KAAOA,EACZG,KAAKF,QAAsB,OAAZA,EAAmBA,EAAU,CAACG,UAAW,GAAIC,SAAU,IAEtEF,KAAKG,aACLH,KAAKI,MACL,CAEDD,aAAe,CAEfC,OAAS,CAETC,QACC,MAAMC,EAAaC,KAAKC,MACxBC,YAAW,IAAMT,KAAKU,QAAQ,QAAS,CAACJ,KAAc,KACtD,E,4GCrBa,MAAMK,UAAkBpB,EAAAA,EAEtCC,YAAYI,GACXF,QACAM,KAAKJ,KAAOA,EACZI,KAAKY,KAAOC,KAAKC,MAAMlB,EAAKmB,aAAa,eACzCf,KAAKgB,SACLhB,KAAKiB,YACL,CAEDA,aACC,OAAOjB,KAAKY,KAAKM,MAChB,IAAK,OACJlB,KAAKmB,UAAUnB,KAAKY,KAAKQ,IAAKpB,KAAKqB,UACpC,MACA,IAAK,QACJrB,KAAKsB,UAAUtB,KAAKY,KAAKQ,IAAKpB,KAAKuB,WAIrC,CAEDF,WACC,MAAMG,EAAW,MAAQxB,KAAKY,KAAKV,SAASuB,SACtCvB,EAAWwB,OAAOC,OAAO3B,KAAKY,KAAKV,SAAU,CAClD,OAAU,IAAMsB,IAEjBxB,KAAKJ,KAAKgC,aAAa,KAAMJ,GAC7BK,OAAOC,MAAMC,MAAMC,OAAO9B,GACtB+B,SAASC,kBAAkB,uBAAuB,KACrDD,SAASC,kBAAkB,uBAAuB,GAAGC,MAAQF,SAASG,SAASC,KAGhF,CAEDd,YAEC,CAEDJ,UAAUmB,EAAKC,GACd,MAAMC,EAAOP,SAASQ,cAAc,UACpCD,EAAKZ,aAAc,UAAW,SAC9BY,EAAKZ,aAAc,OAAQ,mBAC3BY,EAAKZ,aAAc,MAAOU,GAC1BE,EAAKE,OAASH,EAAS5C,KAAKK,MAC5BA,KAAKJ,KAAK+C,YAAYH,EACtB,CAEDlB,UAAUgB,EAAKC,GACd,MAAMC,EAAOP,SAASQ,cAAc,UACjBf,OAAOkB,KAAK5C,KAAKY,KAAKV,UAAU2C,KAAKC,IACvD,IAAIX,EAAQnC,KAAKY,KAAKV,SAAS4C,GAC/B,MAAO,CACN,KAAQA,EACR,MAASC,MAAMC,QAAQb,GAASA,EAAMc,KAAK,KAAOd,EAFnD,IAKUe,SAAQC,IAClBX,EAAKZ,aAAauB,EAAKtD,KAAMsD,EAAKhB,MAAlC,IAEDK,EAAKZ,aAAa,MAAOU,GACzBE,EAAKE,OAASH,EAAS5C,KAAKK,MAC5BA,KAAKJ,KAAK+C,YAAYH,EACtB,CAEDxB,SACCoC,EAAAA,EAAAA,MAAW,YAAapD,KAAKY,KAAKM,KAAO,WACzClB,KAAKU,QAAQ,kBACb,EClEK,MAAM2C,UAA0B/D,EAAAA,EAEtCE,YAAYC,GACXC,MAAMD,EACN,CAEDW,OACCJ,KAAKsD,UAAY,IAAI3C,EAAUX,KAAKJ,KAAK2D,cAAc,iBACvDvD,KAAKK,OACL,EAGK,SAASmD,IAEf,OADiB,IAAIH,CAErB,C,iCCnBc,MAAM9D,EAEjBC,cAEIQ,KAAKyD,UAAY,CAAC,EAClBzD,KAAKyD,UAAUC,KAAO,CAAC,CAC1B,CAEDC,GAAGC,EAAQrB,GAGP,YAAqB,IAAXqB,GAAqC,KAAXA,GAEhCC,QAAQC,KAAK,gBACN,QAGY,IAAbvB,GAENsB,QAAQC,KAAK,mBACN,IAIG9D,KAAK+D,aAAaH,GAG1BV,SAASc,IAGX,MAAMnE,EAAOG,KAAKiE,YAAYD,GAGzBhE,KAAKyD,UAAW5D,EAAKqE,qBAAuBxC,SAC7C1B,KAAKyD,UAAW5D,EAAKqE,WAAc,CAAC,GAGnClE,KAAKyD,UAAW5D,EAAKqE,WAAarE,EAAKsC,iBAAmBY,QAC3D/C,KAAKyD,UAAW5D,EAAKqE,WAAarE,EAAKsC,OAAU,IAGrDnC,KAAKyD,UAAW5D,EAAKqE,WAAarE,EAAKsC,OAAQgC,KAAK5B,EAApD,IAGGvC,KACV,CAEDoE,IAAIR,GAGA,YAAqB,IAAXA,GAAqC,KAAXA,GAEhCC,QAAQC,KAAK,eACN,IAIG9D,KAAK+D,aAAaH,GAG1BV,SAASc,IAGX,MAAMnE,EAAOG,KAAKiE,YAAYD,GAG9B,GAAsB,SAAnBnE,EAAKqE,WAAuC,KAAfrE,EAAKsC,aAE1BnC,KAAKyD,UAAW5D,EAAKqE,gBAO5B,GAAsB,SAAnBrE,EAAKqE,UAGJ,IAAI,MAAMA,KAAalE,KAAKyD,UAErBzD,KAAKyD,UAAWS,aAAuBxC,QAAU1B,KAAKyD,UAAWS,GAAarE,EAAKsC,iBAAmBY,eAE9F/C,KAAKyD,UAAWS,GAAarE,EAAKsC,OAGc,IAApDT,OAAOkB,KAAK5C,KAAKyD,UAAWS,IAAaG,eACjCrE,KAAKyD,UAAWS,SAM/BlE,KAAKyD,UAAW5D,EAAKqE,qBAAuBxC,QAAU1B,KAAKyD,UAAW5D,EAAKqE,WAAarE,EAAKsC,iBAAmBY,eAE7G/C,KAAKyD,UAAW5D,EAAKqE,WAAarE,EAAKsC,OAGc,IAAzDT,OAAOkB,KAAK5C,KAAKyD,UAAW5D,EAAKqE,YAAaG,eACtCrE,KAAKyD,UAAW5D,EAAKqE,WAEvC,IAGElE,KACV,CAEDU,QAAQsD,EAAOM,GAGX,QAAoB,IAAVN,GAAmC,KAAVA,EAG/B,OADAH,QAAQC,KAAK,eACN,EAGX,IAAIS,EAAc,KACdC,EAAS,KAGb,MAAMC,EAASH,aAAiBvB,MAAcuB,EAAL,GAGzC,IAAIzE,EAAOG,KAAK+D,aAAaC,GAM7B,GAHAnE,EAAOG,KAAKiE,YAAYpE,EAAM,IAGR,SAAnBA,EAAKqE,UAGJ,IAAI,MAAMA,KAAalE,KAAKyD,UAErBzD,KAAKyD,UAAWS,aAAuBxC,QAAU1B,KAAKyD,UAAWS,GAAarE,EAAKsC,iBAAmBY,OAErG/C,KAAKyD,UAAWS,GAAarE,EAAKsC,OAAQe,SAAQ,SAASX,GAEvDiC,EAASjC,EAASmC,MAAM1E,KAAMyE,QAEJ,IAAhBF,IAENA,EAAcC,EAErB,SAMR,GAAGxE,KAAKyD,UAAW5D,EAAKqE,qBAAuBxC,OACpD,CACI,GAAkB,KAAf7B,EAAKsC,MAGJ,OADA0B,QAAQC,KAAK,cACN9D,KAGXA,KAAKyD,UAAW5D,EAAKqE,WAAarE,EAAKsC,OAAQe,SAAQ,SAASX,GAE5DiC,EAASjC,EAASmC,MAAM1E,KAAMyE,QAEJ,IAAhBF,IACNA,EAAcC,EACrB,GACJ,CAED,OAAOD,CACV,CAEDR,aAAaH,GAET,IAAIe,EAAQf,EAKZ,OAJAe,EAAQA,EAAMC,QAAQ,oBAAqB,IAC3CD,EAAQA,EAAMC,QAAQ,SAAU,KAChCD,EAAQA,EAAME,MAAM,KAEbF,CACV,CAEDV,YAAYpE,GAER,MAAMiF,EAAU,CAAC,EACXC,EAAQlF,EAAKgF,MAAM,KAYzB,OAVAC,EAAQE,SAAYnF,EACpBiF,EAAQ3C,MAAY4C,EAAO,GAC3BD,EAAQZ,UAAY,OAGjBa,EAAMV,OAAS,GAAoB,KAAfU,EAAO,KAE1BD,EAAQZ,UAAYa,EAAO,IAGxBD,CACV,E","sources":["webpack://core-bundler/./src/app/modules/module.js","webpack://core-bundler/./src/app/shared/LazyEmbed.js","webpack://core-bundler/./src/app/modules/video-player/video-player.js","webpack://core-bundler/./src/app/shared/EventEmitter.js"],"sourcesContent":["import EventEmitter from '../shared/EventEmitter.js';\nexport default class Module extends EventEmitter {\n\n\tconstructor(el) {\n\t\tsuper(el);\n\t}\n\n\tbind(node, name, options, time) {\n\t\tthis.node = node;\n\t\tthis.name = name;\n\t\tthis.options = options !== null ? options : {selectors: '', settings: ''};\n\t\t\n\t\tthis.setOptions();\n\t\tthis.init();\n\t}\n\n\tsetOptions() {}\n\n\tinit() {}\n\n\tready() {\n\t\tconst endingTime = Date.now();\n\t\tsetTimeout(() => this.trigger('ready', [endingTime]), 0.000001);\n\t}\n}\n","import EventEmitter from './EventEmitter.js';\r\nimport Logs from './logs.js';\r\nexport default class LazyEmbed extends EventEmitter {\r\n\r\n\tconstructor(node) {\r\n\t\tsuper();\r\n\t\tthis.node = node;\r\n\t\tthis.data = JSON.parse(node.getAttribute('data-embed'));\r\n\t\tthis.loaded();\r\n\t\tthis.switchCase();\r\n\t}\r\n\r\n\tswitchCase() {\r\n\t\tswitch(this.data.type) {\r\n\t\t\tcase 'form':\r\n\t\t\t\tthis.addScript(this.data.url, this.initForm);\r\n\t\t\tbreak;\r\n\t\t\tcase 'video':\r\n\t\t\t\tthis.addIframe(this.data.url, this.initVideo);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\tinitForm() {\r\n\t\tconst selector = 'id-' + this.data.settings.portalId;\r\n\t\tconst settings = Object.assign(this.data.settings, {\r\n\t\t\t'target': '#' + selector\r\n\t\t});\r\n\t\tthis.node.setAttribute('id', selector);\r\n\t\twindow.hbspt.forms.create(settings);\r\n\t\tif (document.getElementsByName(\"url_last_submission\")[0]) {\r\n\t\t\tdocument.getElementsByName(\"url_last_submission\")[0].value = document.location.href;\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\tinitVideo() {\r\n\t\t\r\n\t}\r\n\r\n\taddScript(src, callback) {\r\n\t\tconst item = document.createElement('script');\r\n\t\titem.setAttribute( 'charset', 'utf-8' );\r\n\t\titem.setAttribute( 'type', 'text/javascript' );\r\n\t\titem.setAttribute( 'src', src );\r\n\t\titem.onload = callback.bind(this);\r\n\t\tthis.node.appendChild(item);\r\n\t}\r\n\r\n\taddIframe(src, callback) {\r\n\t\tconst item = document.createElement('iframe');\r\n\t\tconst attributes = Object.keys(this.data.settings).map((key) => {\r\n\t\t\tlet value = this.data.settings[key];\r\n\t\t\treturn { \r\n\t\t\t\t'name': key, \r\n\t\t\t\t'value': Array.isArray(value) ? value.join(';') : value\r\n\t\t\t}\r\n\t\t});\r\n\t\tattributes.forEach(attr => {\r\n\t\t\titem.setAttribute(attr.name, attr.value);\r\n\t\t})\r\n\t\titem.setAttribute('src', src);\r\n\t\titem.onload = callback.bind(this);\r\n\t\tthis.node.appendChild(item);\r\n\t}\r\n\r\n\tloaded() {\r\n\t\tLogs.debug('LazyEmbed', this.data.type + ' loaded');\r\n\t\tthis.trigger('lazyEmbedLoaded');\r\n\t}\r\n}\r\n","import Module from '../module.js';\r\nimport LazyEmbed from '../../shared/LazyEmbed.js';\r\nimport './video-player.scss';\r\n\r\nexport class VideoPlayerModule extends Module {\r\n\r\n\tconstructor(el) {\r\n\t\tsuper(el);\r\n\t}\r\n\r\n\tinit() {\r\n\t\tthis.lazyEmbed = new LazyEmbed(this.node.querySelector('[data-embed]'));\r\n\t\tthis.ready()\r\n\t}\r\n}\r\n\r\nexport function createInstance() {\r\n\tconst instance = new VideoPlayerModule();\r\n\treturn instance;\r\n}\r\n","export default class EventEmitter\n{\n    constructor()\n    {\n        this.callbacks = {}\n        this.callbacks.base = {}\n    }\n\n    on(_names, callback)\n    {\n        // Errors\n        if(typeof _names === 'undefined' || _names === '')\n        {\n            console.warn('wrong names')\n            return false\n        }\n\n        if(typeof callback === 'undefined')\n        {\n            console.warn('wrong callback')\n            return false\n        }\n\n        // Resolve names\n        const names = this.resolveNames(_names)\n\n        // Each name\n        names.forEach((_name) =>\n        {\n            // Resolve name\n            const name = this.resolveName(_name)\n\n            // Create namespace if not exist\n            if(!(this.callbacks[ name.namespace ] instanceof Object))\n                this.callbacks[ name.namespace ] = {}\n\n            // Create callback if not exist\n            if(!(this.callbacks[ name.namespace ][ name.value ] instanceof Array))\n                this.callbacks[ name.namespace ][ name.value ] = []\n\n            // Add callback\n            this.callbacks[ name.namespace ][ name.value ].push(callback)\n        })\n\n        return this\n    }\n\n    off(_names)\n    {\n        // Errors\n        if(typeof _names === 'undefined' || _names === '')\n        {\n            console.warn('wrong name')\n            return false\n        }\n\n        // Resolve names\n        const names = this.resolveNames(_names)\n\n        // Each name\n        names.forEach((_name) =>\n        {\n            // Resolve name\n            const name = this.resolveName(_name)\n\n            // Remove namespace\n            if(name.namespace !== 'base' && name.value === '')\n            {\n                delete this.callbacks[ name.namespace ]\n            }\n\n            // Remove specific callback in namespace\n            else\n            {\n                // Default\n                if(name.namespace === 'base')\n                {\n                    // Try to remove from each namespace\n                    for(const namespace in this.callbacks)\n                    {\n                        if(this.callbacks[ namespace ] instanceof Object && this.callbacks[ namespace ][ name.value ] instanceof Array)\n                        {\n                            delete this.callbacks[ namespace ][ name.value ]\n\n                            // Remove namespace if empty\n                            if(Object.keys(this.callbacks[ namespace ]).length === 0)\n                                delete this.callbacks[ namespace ]\n                        }\n                    }\n                }\n\n                // Specified namespace\n                else if(this.callbacks[ name.namespace ] instanceof Object && this.callbacks[ name.namespace ][ name.value ] instanceof Array)\n                {\n                    delete this.callbacks[ name.namespace ][ name.value ]\n\n                    // Remove namespace if empty\n                    if(Object.keys(this.callbacks[ name.namespace ]).length === 0)\n                        delete this.callbacks[ name.namespace ]\n                }\n            }\n        })\n\n        return this\n    }\n\n    trigger(_name, _args)\n    {\n        // Errors\n        if(typeof _name === 'undefined' || _name === '')\n        {\n            console.warn('wrong name')\n            return false\n        }\n\n        let finalResult = null\n        let result = null\n\n        // Default args\n        const args = !(_args instanceof Array) ? [] : _args\n\n        // Resolve names (should on have one event)\n        let name = this.resolveNames(_name)\n\n        // Resolve name\n        name = this.resolveName(name[ 0 ])\n\n        // Default namespace\n        if(name.namespace === 'base')\n        {\n            // Try to find callback in each namespace\n            for(const namespace in this.callbacks)\n            {\n                if(this.callbacks[ namespace ] instanceof Object && this.callbacks[ namespace ][ name.value ] instanceof Array)\n                {\n                    this.callbacks[ namespace ][ name.value ].forEach(function(callback)\n                    {\n                        result = callback.apply(this, args)\n\n                        if(typeof finalResult === 'undefined')\n                        {\n                            finalResult = result\n                        }\n                    })\n                }\n            }\n        }\n\n        // Specified namespace\n        else if(this.callbacks[ name.namespace ] instanceof Object)\n        {\n            if(name.value === '')\n            {\n                console.warn('wrong name')\n                return this\n            }\n\n            this.callbacks[ name.namespace ][ name.value ].forEach(function(callback)\n            {\n                result = callback.apply(this, args)\n\n                if(typeof finalResult === 'undefined')\n                    finalResult = result\n            })\n        }\n\n        return finalResult\n    }\n\n    resolveNames(_names)\n    {\n        let names = _names\n        names = names.replace(/[^a-zA-Z0-9 ,/.]/g, '')\n        names = names.replace(/[,/]+/g, ' ')\n        names = names.split(' ')\n\n        return names\n    }\n\n    resolveName(name)\n    {\n        const newName = {}\n        const parts = name.split('.')\n\n        newName.original  = name\n        newName.value     = parts[ 0 ]\n        newName.namespace = 'base' // Base namespace\n\n        // Specified namespace\n        if(parts.length > 1 && parts[ 1 ] !== '')\n        {\n            newName.namespace = parts[ 1 ]\n        }\n\n        return newName\n    }\n}"],"names":["Module","EventEmitter","constructor","el","super","bind","node","name","options","time","this","selectors","settings","setOptions","init","ready","endingTime","Date","now","setTimeout","trigger","LazyEmbed","data","JSON","parse","getAttribute","loaded","switchCase","type","addScript","url","initForm","addIframe","initVideo","selector","portalId","Object","assign","setAttribute","window","hbspt","forms","create","document","getElementsByName","value","location","href","src","callback","item","createElement","onload","appendChild","keys","map","key","Array","isArray","join","forEach","attr","Logs","VideoPlayerModule","lazyEmbed","querySelector","createInstance","callbacks","base","on","_names","console","warn","resolveNames","_name","resolveName","namespace","push","off","length","_args","finalResult","result","args","apply","names","replace","split","newName","parts","original"],"sourceRoot":""}