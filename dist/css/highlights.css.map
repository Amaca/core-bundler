{"version":3,"file":"../css/highlights.css","mappings":"AAIA,YACI,oBAEA,iCACI,kBCFI,CC+DV,6BF9DE,iCAIQ,kBCJA,EDSJ,mBACI,kBCVA,CC8DV,6BFrDM,mBAIQ,kBCZJ,EDkBZ,kBACI,eCLS,CDMT,6CACA,aACA,mBACA,YEsCF,6BF3CF,kBAQO,YACA,uBAGH,6BACI,aCdK,CDeL,0BACA,gBACA,gBACA,kBCpCI,CC8DV,6BF/BE,6BAQQ,0BACA,kBCvCA,EC6DV,6BF/BE,6BAaQ,2BAIR,0DAEI,kBCjDI,CDoDR,4BACI,0BAGJ,gCACI,aACA,cACA,4BEEN,6BFLE,gCAMQ,kBACA,cACA,eACA,SAGJ,uCACI,WACA,kBACA,UACA,QACA,MACA,YACA,WACA,6DACA,sBACA,aEjBV,6BFOM,uCAaQ,eAKZ,kCACI,aACA,cACA,kBACA,cE7BN,6BFyBE,kCAOQ,cACA,eACA,SAGJ,yCACI,WACA,kBACA,UACA,WACA,MACA,YACA,WACA,6DACA,sBE9CV,6BFqCM,yCAYQ,cEjDd,6BFqDM,6CAEQ,c","sources":["webpack://core-bundler/./src/app/modules/highlights/highlights.scss","webpack://core-bundler/./src/scss/core/_variables.scss","webpack://core-bundler/./src/scss/grid/_breakpoints.scss"],"sourcesContent":["@import \"../../../scss/core/mixins\";\r\n@import \"../../../scss/core/variables\";\r\n@import '../../../scss/grid/breakpoints';\r\n\r\n.highlights {\r\n    padding: $spacing-l 0 $spacing-m;\r\n\r\n    .box._heading-center {\r\n        margin-bottom: $spacing-l;\r\n\r\n        @include media-down(md) {\r\n            margin-bottom: $spacing-m;\r\n        }\r\n    }\r\n\r\n    .row {\r\n        & > * {\r\n            margin-bottom: $spacing-m;\r\n\r\n            @include media-down(sm) {\r\n                margin-bottom: $spacing-s;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n.card._highlights {\r\n    background: $white;\r\n    box-shadow: 0px 10px 40px -7px rgba(0, 0, 0, 0.3);\r\n    display: flex;\r\n    flex-direction: row;\r\n    height: 100%;\r\n\r\n    @include media-down(sm) {\r\n       height: auto;\r\n       flex-direction: column;\r\n    }\r\n\r\n    .box-title {\r\n        color: $dark-blue;\r\n        font-size: pxrem(32);\r\n        line-height: 1.2;\r\n        font-weight: 300;\r\n        margin-bottom: $spacing-m;\r\n\r\n        @include media-down(md) {\r\n            font-size: pxrem(26);\r\n            margin-bottom: $spacing-s;\r\n        }\r\n\r\n        @include media-down(sm) {\r\n            font-size: pxrem(22);\r\n        }\r\n    }\r\n\r\n    .box-text,\r\n    .box-eyelet {\r\n        margin-bottom: $spacing-s;\r\n    }\r\n\r\n    .box-text {\r\n        font-size: pxrem(14);\r\n    }\r\n\r\n    .card-primary {\r\n        flex: 0 0 60%;\r\n        max-width: 60%;\r\n        padding: 20px 40px 20px 20px;\r\n\r\n        @include media-down(sm) {\r\n            position: relative;\r\n            flex: 0 0 100%;\r\n            max-width: 100%;\r\n            order: 2;\r\n        }\r\n\r\n        &:before {\r\n            content: '';\r\n            position: absolute;\r\n            z-index: 1;\r\n            right: 0;\r\n            top: 0;\r\n            height: 100%;\r\n            width: 10px;\r\n            background-image: url(../assets/img/ui/colored-line-vert.jpg);\r\n            background-size: cover;\r\n            display: none;\r\n\r\n            @include media-down(sm) {\r\n                display: block;\r\n            }\r\n        }\r\n    }\r\n\r\n    .card-secondary {\r\n        flex: 0 0 40%;\r\n        max-width: 40%;\r\n        position: relative;\r\n        line-height: 0;\r\n\r\n        @include media-down(sm) {\r\n            flex: 0 0 100%;\r\n            max-width: 100%;\r\n            order: 1;\r\n        }\r\n\r\n        &:before {\r\n            content: '';\r\n            position: absolute;\r\n            z-index: 1;\r\n            left: -20px;\r\n            top: 0;\r\n            height: 100%;\r\n            width: 20px;\r\n            background-image: url(../assets/img/ui/colored-line-vert.jpg);\r\n            background-size: cover;\r\n\r\n            @include media-down(sm) {\r\n                display: none;\r\n            }\r\n        }\r\n\r\n        .img._h100 {\r\n            @include media-down(sm) {\r\n                height: 150px;\r\n            }\r\n        }\r\n    }\r\n}","//css vars\r\n:root {\r\n}\r\n\r\n//gutter\r\n$spacing-xl: 80px;\r\n$spacing-l: 60px;\r\n$spacing-m: 40px;\r\n$spacing-s: 20px;\r\n$spacing-xs: 10px;\r\n$spacing-xxs: 5px;\r\n\r\n//font size\r\n$font-main: 18px;\r\n$font-rem: 18;\r\n\r\n$font-18: 1rem;\r\n$font-16: pxrem(16);\r\n$font-14: pxrem(14);\r\n$font-12: pxrem(12);\r\n\r\n//colors\r\n$white:      #ffffff;\r\n$orange:     #ED694B;\r\n$blue:       #3fa2f7;\r\n$dark-blue:  #1A9EDA;\r\n$deep-blue:  #0069d9;\r\n$grey:       #e6e6e6;\r\n$light-grey: #F6F6F6;\r\n$dark-grey:  #555659;\r\n$dark:       #3C3D41;\r\n$black:      #000000;\r\n\r\n//elements\r\n$header-height: 175px;\r\n$header-height-m: 94px;\r\n\r\n//animations\r\n$expo: cubic-bezier(1.000, 0.000, 0.000, 1.000);\r\n$smooth: cubic-bezier(0, 0.97, 0.43, 1);\r\n\r\n//grid\r\n$grid-columns: 12 !default;\r\n$grid-gutter-widths: (\r\n\txs: 30px,\r\n\tsm: 30px,\r\n\tmd: 30px,\r\n\tlg: 30px,\r\n\txl: 30px) !default;\r\n$grid-breakpoints: (\r\n\txs: 0,\r\n\tsm: 768px,\r\n\tmd: 1024px,\r\n\tlg: 1240px,\r\n\txl: 1470px) !default;\r\n$container-max-widths: (\r\n\tsm: calc(100% - 30px),\r\n\tmd: calc(100% - 30px),\r\n\tlg: 1240px,\r\n\txl: 1470px) !default; \r\n$container-fluid-max-widths: (\r\n\tsm: calc(100% - 60px),\r\n\tmd: calc(100% - 60px),\r\n\tlg: calc(100% - 60px),\r\n\txl: 1800px) !default; ","// Name of the next breakpoint, or null for the last breakpoint.\n//\n//    >> breakpoint-next(sm)\n//    md\n//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    md\n//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))\n//    md\n@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\n\t$n: index($breakpoint-names, $name);\n\t@return if($n !=null and $n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\n}\n\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\n//\n//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    576px\n@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {\n\t$min: map-get($breakpoints, $name);\n\t@return if($min !=0, $min, null);\n}\n\n// Maximum breakpoint width. Null for the largest (last) breakpoint.\n// The maximum value is calculated as the minimum of the next one less 0.02px\n// to work around the limitations of `min-` and `max-` prefixes and viewports with fractional widths.\n// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\n// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\n// See https://bugs.webkit.org/show_bug.cgi?id=178261\n//\n//    >> breakpoint-max(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    767.98px\n@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {\n\t$next: breakpoint-next($name, $breakpoints);\n\t@return if($next, breakpoint-min($next, $breakpoints) - .02, null);\n}\n\n// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front.\n// Useful for making responsive utilities.\n//\n//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"\"  (Returns a blank string)\n//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"-sm\"\n@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {\n\t@return if(breakpoint-min($name, $breakpoints)==null, \"\", \"-#{$name}\");\n}\n\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n// Makes the @content apply to the given breakpoint and wider.\n@mixin media-up($name, $breakpoints: $grid-breakpoints) {\n\t$min: breakpoint-min($name, $breakpoints);\n\n\t@if $min {\n\t\t@media (min-width: $min) {\n\t\t\t@content;\n\t\t}\n\t}\n\n\t@else {\n\t\t@content;\n\t}\n}\n\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n// Makes the @content apply to the given breakpoint and narrower.\n@mixin media-down($name, $breakpoints: $grid-breakpoints) {\n\t$max: breakpoint-max($name, $breakpoints);\n\n\t@if $max {\n\t\t@media (max-width: $max) {\n\t\t\t@content;\n\t\t}\n\t}\n\n\t@else {\n\t\t@content;\n\t}\n}\n\n// Media that spans multiple breakpoint widths.\n// Makes the @content apply between the min and max breakpoints\n@mixin media-between($lower, $upper, $breakpoints: $grid-breakpoints) {\n\t$min: breakpoint-min($lower, $breakpoints);\n\t$max: breakpoint-max($upper, $breakpoints);\n\n\t@if $min !=null and $max !=null {\n\t\t@media (min-width: $min) and (max-width: $max) {\n\t\t\t@content;\n\t\t}\n\t}\n\n\t@else if $max==null {\n\t\t@include media-up($lower, $breakpoints) {\n\t\t\t@content;\n\t\t}\n\t}\n\n\t@else if $min==null {\n\t\t@include media-down($upper, $breakpoints) {\n\t\t\t@content;\n\t\t}\n\t}\n}\n\n// Media between the breakpoint's minimum and maximum widths.\n// No minimum for the smallest breakpoint, and no maximum for the largest one.\n// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\n@mixin media-only($name, $breakpoints: $grid-breakpoints) {\n\t$min: breakpoint-min($name, $breakpoints);\n\t$max: breakpoint-max($name, $breakpoints);\n\n\t@if $min !=null and $max !=null {\n\t\t@media (min-width: $min) and (max-width: $max) {\n\t\t\t@content;\n\t\t}\n\t}\n\n\t@else if $max==null {\n\t\t@include media-up($name, $breakpoints) {\n\t\t\t@content;\n\t\t}\n\t}\n\n\t@else if $min==null {\n\t\t@include media-down($name, $breakpoints) {\n\t\t\t@content;\n\t\t}\n\t}\n}\n"],"names":[],"sourceRoot":""}